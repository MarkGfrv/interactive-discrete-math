import { INode } from '$lib/types';
import { ReadonlySignal } from '@preact/signals';
import { DeepSignal } from 'deepsignal';
type Props = {
    nodes: DeepSignal<INode[]>;
    selection: ReadonlySignal<Set<number>>;
    getInnerPoint: (x: number, y: number) => readonly [number, number];
    changeNodePosition?(element: INode, x: number, y: number): void;
    nodePositionChanged?(element: INode): void;
    zoom?: ReadonlySignal<number>;
};
export declare const withDraggable: (props: Props) => {
    isDragging: ReadonlySignal<boolean>;
    startDragginig: (e: MouseEvent) => void;
    updateDragging: (e: MouseEvent) => void;
    abortDragging: (options?: {
        revert: boolean;
    }) => void;
};
export {};
