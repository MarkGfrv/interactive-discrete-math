import { EdgeType, NodeType } from '$lib/types';
type DiskOptions = {
    nodeTypes?: NodeType[];
    edgeTypes?: EdgeType[];
    getInnerPoint?: (x: number, y: number) => readonly [number, number];
};
export type OptionType = 'node' | 'edge';
export type DiskClickCallback = (...args: [type: 'node', x: number, y: number, e: MouseEvent, value: NodeType] | [type: 'edge', x: number, y: number, e: MouseEvent, value: EdgeType]) => void;
export declare const withDisk: (click: DiskClickCallback, options?: DiskOptions) => {
    Disk: () => import("preact").JSX.Element | null;
    showDisk: (type: OptionType, x: number, y: number) => void;
    hideDisk: () => void;
    isDiskOpened: import("@preact/signals-core").Signal<boolean>;
};
export {};
