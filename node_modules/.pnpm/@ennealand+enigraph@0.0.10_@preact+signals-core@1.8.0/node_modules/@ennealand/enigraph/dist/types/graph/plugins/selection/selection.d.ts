import { INode } from '$lib/types';
type Props = {
    nodes: INode[];
    getInnerPoint: (x: number, y: number) => readonly [number, number];
    localize?: (x: number, y: number) => readonly [number, number];
    onSelectionStop?: (selection: Set<number>) => void;
    inversion?: true;
    padding?: number;
};
export declare const withSelection: (props: Props) => {
    /** Area selection rectangle */
    AreaSelection: () => import("preact").JSX.Element | null;
    selection: import("@preact/signals-core").ReadonlySignal<Set<number>>;
    isSelecting: import("@preact/signals-core").ReadonlySignal<boolean>;
    clearSelection: () => void;
    startSelection: (e: MouseEvent, options?: {
        deselection?: boolean;
        selection?: boolean;
        clear?: boolean;
    }) => void;
    updateSelection: (e: MouseEvent, options?: {
        deselection?: boolean;
        selection?: boolean;
    }) => void;
};
export {};
