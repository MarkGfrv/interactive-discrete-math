import { IGroup, INode } from '$lib/types';
import { ReadonlySignal } from '@preact/signals';
import { DeepSignal } from 'deepsignal';
type Props = {
    nodes: DeepSignal<INode[]>;
    groups: DeepSignal<IGroup[]>;
    selection: ReadonlySignal<Set<number>>;
};
export declare const withGrouping: (props: Props) => {
    Group: (args: {
        placeholder?: true | undefined;
        nohighlight?: boolean | undefined;
        customSelection?: Set<number> | undefined;
        customIndicators?: Map<number, string> | undefined;
        onMouseDown?: ((e: MouseEvent, id: number) => void) | undefined;
    }) => import("preact").JSX.Element;
    openGroup: (id: number) => void;
    closeGroup: (id: number) => void;
    closeAllGroups: () => void;
    selectGroup: (id: number) => number;
    deselectGroup: () => null;
    selectedGroup: ReadonlySignal<0 | Set<number> | null | undefined>;
    selectedGroupId: import("@preact/signals-core").Signal<number | null>;
};
export {};
