type Props = {
    width: number;
    height: number;
    getInnerPoint: (x: number, y: number) => readonly [number, number];
};
export declare const withMovable: (props: Props) => {
    transform: {
        $x?: import("@preact/signals-core").Signal<number> | undefined;
        $y?: import("@preact/signals-core").Signal<number> | undefined;
        $moving?: import("@preact/signals-core").Signal<boolean> | undefined;
        $zoom?: import("@preact/signals-core").Signal<number> | undefined;
    } & {
        x: number;
        y: number;
        zoom: number;
        moving: boolean;
    };
    centerX: number;
    centerY: number;
    localize: (x: number, y: number) => readonly [number, number];
    globalize: (x: number, y: number) => readonly [number, number];
    onwheel: (e: WheelEvent) => void;
    zoom: import("@preact/signals-core").Signal<number> | undefined;
    startMoving: (e: MouseEvent) => void;
    updateMoving: (e: MouseEvent) => void;
    stopMoving: () => void;
};
export {};
