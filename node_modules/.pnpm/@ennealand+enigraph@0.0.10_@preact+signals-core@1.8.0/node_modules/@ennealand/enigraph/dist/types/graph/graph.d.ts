import { DeepSignal } from 'deepsignal';
import type { JSX } from 'preact/jsx-runtime';
import { EdgeType, IGroup, NodeType, type Elements, type IEdge, type INode } from '../types';
export interface Props {
    elements: DeepSignal<Elements>;
    addNode(node: DeepSignal<INode>): void;
    addEdge(edge: IEdge): void;
    addGroup(group: IGroup): void;
    changeNodeLabel?(element: INode, label: string): void;
    changeNodePosition?(element: INode, x: number, y: number): void;
    nodePositionChanged?(element: INode): void;
    removeNode?(id: number): void;
    width: number;
    height: number;
    nodeTypes?: NodeType[];
    edgeTypes?: EdgeType[];
    padding?: number;
    objectSelection?: {
        type: 'group';
        action: (id: number) => void;
        values: Set<number>;
        indicators?: Map<number, string>;
    };
    buttonIcons?: Partial<Record<'type' | 'arrow' | 'group' | 'rename' | 'delete', JSX.Element>>;
}
export declare const Graph: ({ elements, width, height, padding, addNode, addEdge, addGroup, changeNodeLabel, changeNodePosition, nodePositionChanged, removeNode, edgeTypes, nodeTypes, objectSelection, buttonIcons }: Props) => JSX.Element;
