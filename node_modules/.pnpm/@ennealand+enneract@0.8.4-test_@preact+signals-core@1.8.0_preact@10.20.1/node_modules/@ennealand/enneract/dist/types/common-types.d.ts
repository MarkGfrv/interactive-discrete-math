import { ScType } from './sc-type.ts';
export type Tuple<T, N extends number, R extends T[] = []> = N extends R['length'] ? R : Tuple<T, N, [...R, T]>;
export type TemplateItem = {
    type: 'addr';
    value: number;
    alias?: string;
} | {
    type: 'type';
    value: ScType;
    alias?: string;
} | {
    type: 'alias';
    value: string;
};
export type TemplatePromiseItem = {
    type: 'addr';
    value: number | Promise<number>;
    alias?: string;
} | {
    type: 'type';
    value: ScType;
    alias?: string;
} | {
    type: 'alias';
    value: string;
};
export type GetQuery = ([string, unknown, 'ref' | 'addr'] | [string, unknown])[];
export type DisposableObject = Disposable;
