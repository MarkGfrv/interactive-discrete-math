import { ScAddr } from "./ScAddr";
export declare type ScEventCallbackFunc = (elAddr: ScAddr, edge: ScAddr, other: ScAddr, eventId: number) => void;
export declare enum ScEventType {
    Unknown = "unknown",
    AfterGenerateConnector = "sc_event_after_generate_connector",
    AfterGenerateOutgoingArc = "sc_event_after_generate_outgoing_arc",
    AfterGenerateIncomingArc = "sc_event_after_generate_incoming_arc",
    AfterGenerateEdge = "sc_event_after_generate_edge",
    BeforeEraseConnector = "sc_event_before_erase_connector",
    BeforeEraseOutgoingArc = "sc_event_before_erase_outgoing_arc",
    BeforeEraseIncomingArc = "sc_event_before_erase_incoming_arc",
    BeforeEraseEdge = "sc_event_before_erase_edge",
    BeforeEraseElement = "sc_event_before_erase_element",
    BeforeChangeLinkContent = "sc_event_before_change_link_content"
}
export declare class ScEventSubscription {
    private _id;
    private _type;
    private _callback;
    constructor(id: number, type: ScEventType, callback: ScEventCallbackFunc);
    get id(): number;
    get type(): ScEventType | null;
    get callback(): ScEventCallbackFunc | null;
    IsValid(): boolean;
}
