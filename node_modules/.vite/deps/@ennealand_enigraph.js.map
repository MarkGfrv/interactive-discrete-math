{
  "version": 3,
  "sources": ["../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/utils.ts", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/nodes/node.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/types.ts", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/edges/alphabet/ArcConst.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/edges/alphabet/ArcConstPermNegAccess.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/edges/alphabet/ArcConstPermPosAccess.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/edges/alphabet/EdgeConst.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/edges/alphabet/_ArcConstPermFuzAccess.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/edges/edge.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/alphabet/alphabet.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/base-graph.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/creation/creation.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/disk/base-disk.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/disk/options.ts", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/disk/disk.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/draggable/draggable.ts", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/grouping/group-position.ts", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/grouping/base-group.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/grouping/grouping.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/menu/base-menu.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/menu/menu.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/movable/movable.ts", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/renaming/renaming.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/selection/area-selection.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/plugins/selection/selection.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/graph/graph.tsx", "../../.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/src/lib/index.tsx"],
  "sourcesContent": ["import { ReadonlySignal, Signal } from '@preact/signals'\n\nexport type SignalLike<T> = ReadonlySignal<T> | Signal<T> | T\nexport const ensureValue = <T>(something: SignalLike<T>) => {\n  if (something && typeof something === 'object' && 'value' in something) {\n    return something.value\n  }\n  return something\n}\n\nexport const cl = (...args: (string | false | undefined | null | Record<string, unknown>)[]) => {\n  let classlist = ''\n  for (const arg of args) {\n    if (!arg) continue\n    if (typeof arg === 'string') classlist += classlist ? ' ' + arg : arg\n    else if (typeof arg === 'object') {\n      for (const key in arg) {\n        if ({}.hasOwnProperty.call(arg, key) && arg[key]) {\n          classlist += classlist ? ' ' + key : key\n        }\n      }\n    }\n  }\n  return classlist\n}\n", "import{options as r,Fragment as e}from\"preact\";export{Fragment}from\"preact\";var t=/[\"&<]/;function n(r){if(0===r.length||!1===t.test(r))return r;for(var e=0,n=0,o=\"\",f=\"\";n<r.length;n++){switch(r.charCodeAt(n)){case 34:f=\"&quot;\";break;case 38:f=\"&amp;\";break;case 60:f=\"&lt;\";break;default:continue}n!==e&&(o+=r.slice(e,n)),o+=f,e=n+1}return n!==e&&(o+=r.slice(e,n)),o}var o=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,f=0,i=Array.isArray;function u(e,t,n,o,i,u){var a,c,p={};for(c in t)\"ref\"==c?a=t[c]:p[c]=t[c];var l={type:e,props:p,key:n,ref:a,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--f,__i:-1,__u:0,__source:i,__self:u};if(\"function\"==typeof e&&(a=e.defaultProps))for(c in a)void 0===p[c]&&(p[c]=a[c]);return r.vnode&&r.vnode(l),l}function a(r){var t=u(e,{tpl:r,exprs:[].slice.call(arguments,1)});return t.key=t.__v,t}var c={},p=/[A-Z]/g;function l(e,t){if(r.attr){var f=r.attr(e,t);if(\"string\"==typeof f)return f}if(\"ref\"===e||\"key\"===e)return\"\";if(\"style\"===e&&\"object\"==typeof t){var i=\"\";for(var u in t){var a=t[u];if(null!=a&&\"\"!==a){var l=\"-\"==u[0]?u:c[u]||(c[u]=u.replace(p,\"-$&\").toLowerCase()),_=\";\";\"number\"!=typeof a||l.startsWith(\"--\")||o.test(l)||(_=\"px;\"),i=i+l+\":\"+a+_}}return e+'=\"'+i+'\"'}return null==t||!1===t||\"function\"==typeof t||\"object\"==typeof t?\"\":!0===t?e:e+'=\"'+n(t)+'\"'}function _(r){if(null==r||\"boolean\"==typeof r||\"function\"==typeof r)return null;if(\"object\"==typeof r){if(void 0===r.constructor)return r;if(i(r)){for(var e=0;e<r.length;e++)r[e]=_(r[e]);return r}}return n(\"\"+r)}export{u as jsx,l as jsxAttr,u as jsxDEV,_ as jsxEscape,a as jsxTemplate,u as jsxs};\n//# sourceMappingURL=jsxRuntime.module.js.map\n", "import { NodeType } from '$lib/types'\nimport type { JSX } from 'preact/jsx-runtime'\nimport style from './node.module.css'\nimport { cl } from '$lib/utils'\n\ninterface Props {\n  type: NodeType\n  x: number\n  y: number\n  label?: string\n  mousedown?: (e: JSX.TargetedMouseEvent<SVGGElement>) => void\n  mouseup?: (e: JSX.TargetedMouseEvent<SVGGElement>) => void\n  textDoubleClick?: () => void\n  highlight?: boolean\n  padding?: number\n  noselect?: boolean\n}\n\nexport const Node = ({\n  type,\n  noselect,\n  x,\n  y,\n  label,\n  mousedown,\n  mouseup,\n  textDoubleClick,\n  highlight,\n  padding,\n}: Props) => {\n  return (\n    <g>\n      <g\n        class={cl(style.container, noselect && style.noselect, highlight && style.highlight)}\n        onMouseDown={mousedown}\n        onMouseUp={mouseup}\n      >\n        {padding && <circle cx={x} cy={y} r={padding} fill='transparent' />}\n        <use class={style.node} xlinkHref={`#scg.node.${type}`} x={x} y={y} />\n      </g>\n      {label && (\n        <text x={x + 17} y={y + 21} class={style.text} onDblClick={textDoubleClick}>\n          {label}\n        </text>\n      )}\n    </g>\n  )\n}\n", "export enum NodeType {\n  Unknown = 'unknown',\n  Const = 'const',\n  ConstTuple = 'const.tuple',\n  ConstStruct = 'const.struct',\n  ConstRole = 'const.role',\n  ConstNorole = 'const.norole',\n  ConstClass = 'const.class',\n  ConstAbstract = 'const.abstract',\n  ConstMaterial = 'const.material',\n  Var = 'var',\n  VarTuple = 'var.tuple',\n  VarStruct = 'var.struct',\n  VarRole = 'var.role',\n  VarNorole = 'var.norole',\n  VarClass = 'var.class',\n  VarAbstract = 'var.abstract',\n  VarMaterial = 'var.material',\n}\n\nexport enum EdgeType {\n  EdgeConst = 'EdgeConst',\n  ArcConst = 'ArcConst',\n  ArcConstPermPosAccess = 'AccessConstPosPerm',\n  ArcConstPermNegAccess = 'AccessConstNegPerm',\n  ArcConstPermFuzAccess = 'AccessConstFuzPerm',\n}\n\nexport interface EdgeProps {\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n  class?: string\n}\n\nexport interface INode {\n  id: number\n  type: NodeType\n  label?: string\n  x: number\n  y: number\n}\n\nexport interface IEdge {\n  id: number\n  type: EdgeType\n  source: INode\n  target: INode\n}\n\nexport interface IGroup {\n  id: number\n  label: string\n  values: Set<number>\n  position: {\n    top: number\n    bottom: number\n    left: number\n    right: number\n  }\n}\n\nexport type Elements = { nodes: INode[]; edges: IEdge[]; groups: IGroup[] }\n", "import type { EdgeProps } from '$lib/types'\nimport styles from '../edge.module.css'\n\nexport const ArcConst = ({ x1, y1, x2, y2 }: EdgeProps) => {\n  const rad = Math.atan2(y2 - y1, x2 - x1)\n  x2 -= Math.cos(rad) * 10\n  y2 -= Math.sin(rad) * 10\n  return (\n    <g class={styles.edge}>\n      <path stroke-width='7.5' d={`M ${x1} ${y1} L ${x2} ${y2}`} class={styles.stroke} />\n      <path\n        stroke-width='5'\n        class={styles.fill}\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        marker-end='url(\"#end-arrow-common\")'\n      />\n    </g>\n  )\n}\n", "import type { EdgeProps } from '$lib/types'\nimport styles from '../edge.module.css'\n\nexport const ArcConstPermNegAccess = ({ x1, y1, x2, y2 }: EdgeProps) => {\n  const rad = Math.atan2(y2 - y1, x2 - x1)\n  x2 -= Math.cos(rad) * 10\n  y2 -= Math.sin(rad) * 10\n  return (\n    <g class={styles.edge}>\n      <path\n        class={styles.stroke}\n        stroke-width='1.5'\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        marker-end='url(\"#end-arrow-access\")'\n      />\n      <path\n        class={styles.stroke}\n        stroke-dasharray='0, 2, 2, 6'\n        stroke-width='10px'\n        d={`M ${x1} ${y1} L ${x2 + 4} ${y2 - 4}`}\n      />\n    </g>\n  )\n}\n", "import type { EdgeProps } from '$lib/types'\nimport styles from '../edge.module.css'\n\nexport const ArcConstPermPosAccess = ({ x1, y1, x2, y2 }: EdgeProps) => {\n  const rad = Math.atan2(y2 - y1, x2 - x1)\n  x2 -= Math.cos(rad) * 10\n  y2 -= Math.sin(rad) * 10\n  return (\n    <g class={styles.edge}>\n      <path\n        class={styles.stroke}\n        stroke-width='1.5'\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        marker-end='url(\"#end-arrow-access\")'\n      />\n    </g>\n  )\n}\n", "import type { EdgeProps } from '$lib/types'\nimport styles from '../edge.module.css'\n\nexport const EdgeConst = ({ x1, y1, x2, y2 }: EdgeProps) => {\n  return (\n    <g class={styles.edge}>\n      <path stroke-width='8' d={`M ${x1} ${y1} L ${x2} ${y2}`} class={styles.stroke} />\n      <path stroke-width='5' class={styles.fill} d={`M ${x1} ${y1} L ${x2} ${y2}`} />\n    </g>\n  )\n}\n", "import type { EdgeProps } from '$lib/types'\nimport styles from '../edge.module.css'\n\nexport const ArcConstPermFuzAccess = ({ x1, y1, x2, y2 }: EdgeProps) => {\n  return (\n    <g class={styles.edge}>\n      <path\n        class={styles.stroke}\n        stroke-width='1.5'\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        marker-end='url(\"#end-arrow-access\")'\n      />\n      <path\n        class={styles.stroke}\n        stroke-dasharray='0, 20, 2, 6'\n        stroke-width='5px'\n        d={`M ${x1} ${y1 - 5} L ${x2 + 5} ${y2}`}\n      />\n      <path\n        class={styles.stroke}\n        stroke-dashoffset='14'\n        stroke-dasharray='0, 20, 2, 6'\n        stroke-width='5px'\n        d={`M ${x1 - 5} ${y1} L ${x2} ${y2 + 5}`}\n      />\n    </g>\n  )\n}\n", "import { EdgeType } from '$lib/types'\nimport { JSX } from 'preact/jsx-runtime'\nimport { ArcConst } from './alphabet/ArcConst'\nimport { ArcConstPermNegAccess } from './alphabet/ArcConstPermNegAccess'\nimport { ArcConstPermPosAccess } from './alphabet/ArcConstPermPosAccess'\nimport { EdgeConst } from './alphabet/EdgeConst'\nimport { ArcConstPermFuzAccess } from './alphabet/_ArcConstPermFuzAccess'\nimport style from './edge.module.css'\nimport { cl } from '$lib/utils'\n\nconst EDGE_TYPES = {\n  [EdgeType.EdgeConst]: EdgeConst,\n  [EdgeType.ArcConst]: ArcConst,\n  [EdgeType.ArcConstPermPosAccess]: ArcConstPermPosAccess,\n  [EdgeType.ArcConstPermNegAccess]: ArcConstPermNegAccess,\n  [EdgeType.ArcConstPermFuzAccess]: ArcConstPermFuzAccess,\n}\n\ninterface Props {\n  type: EdgeType\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n  mousedown?: (e: JSX.TargetedMouseEvent<SVGGElement>) => void\n  mouseup?: (e: JSX.TargetedMouseEvent<SVGGElement>) => void\n  highlight?: boolean\n  padding?: number\n  noselect?: boolean\n}\n\nexport const Edge = ({\n  type,\n  noselect,\n  x1 = 0,\n  y1 = 0,\n  x2 = 0,\n  y2 = 0,\n  mousedown,\n  mouseup,\n  highlight,\n  padding = 0,\n}: Props) => {\n  const MyEdge = EDGE_TYPES[type]\n  const length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\n  const dx = length && ((x2 - x1) / length) * padding\n  const dy = length && ((y2 - y1) / length) * padding\n\n  return (\n    <g\n      class={cl(style.container, noselect && style.noselect, highlight && style.highlight)}\n      onMouseDown={mousedown}\n      onMouseUp={mouseup}\n    >\n      <path d={`M ${x1 + dx} ${y1 + dy} L ${x2 - dx} ${y2 - dy}`} stroke-width='15' stroke='transparent' />\n      <MyEdge x1={x1 + dx} y1={y1 + dy} x2={x2 - dx} y2={y2 - dy} />\n    </g>\n  )\n}\n", "// million-ignore\nexport const Alphabet = () => (\n  <defs>\n    <circle id='scg.node.const.outer' cx='0' cy='0' r='10'></circle>\n    <rect id='scg.node.var.outer' x='-10' y='-10' width='20' height='20'></rect>\n    <clipPath id='scg.node.const.clip'>\n      <use xlinkHref='#scg.node.const.clip'></use>\n    </clipPath>\n    <clipPath id='scg.node.var.clip'>\n      <use xlinkHref='#scg.node.var.clip'></use>\n    </clipPath>\n\n    {/* <!-- define constant nodes --> */}\n\n    <g id='scg.node.unknown'>\n    <circle cx='0' cy='0' r='2.5' stroke-width='5' />\n      <text x='7' y='15' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const.tuple'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='1.3'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const.struct'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <circle cx='0' cy='0' r='1' stroke-width='2' />\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const.role'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <line x1='0' x2='0' y1='-10' y2='10' stroke-width='1.3'></line>\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='1.3'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const.norole'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='1.3' transform='rotate(45, 0, 0)'></line>\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='1.3' transform='rotate(-45, 0, 0)'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const.class'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <line x1='-10' x2='10' y1='-3' y2='-3' stroke-width='1.3'></line>\n      <line x1='-10' x2='10' y1='3' y2='3' stroke-width='1.3'></line>\n      <line x1='-3' x2='-3' y1='-10' y2='10' stroke-width='1.3'></line>\n      <line x1='3' x2='3' y1='-10' y2='10' stroke-width='1.3'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const.abstract'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <g stroke-width='1.3'>\n        <line x1='-10' x2='10' y1='-6' y2='-6'></line>\n        <line x1='-10' x2='10' y1='-3' y2='-3'></line>\n        <line x1='-10' x2='10' y1='0' y2='0'></line>\n        <line x1='-10' x2='10' y1='3' y2='3'></line>\n        <line x1='-10' x2='10' y1='6' y2='6'></line>\n      </g>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.const.material'>\n      <use xlinkHref='#scg.node.const.outer'></use>\n      <g stroke-width='1.3' transform='rotate(-45, 0, 0)'>\n        <line x1='-9' x2='9' y1='-6' y2='-6'></line>\n        <line x1='-10' x2='10' y1='-3' y2='-3'></line>\n        <line x1='-10' x2='10' y1='0' y2='0'></line>\n        <line x1='-10' x2='10' y1='3' y2='3'></line>\n        <line x1='-9' x2='9' y1='6' y2='6'></line>\n      </g>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    {/* <!-- define variable nodes --> */}\n    <g id='scg.node.var'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.var.tuple'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='1.3'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.var.struct'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <circle cx='0' cy='0' r='1' stroke-width='2' />\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.var.role'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <line x1='0' x2='0' y1='-10' y2='10' stroke-width='1.3'></line>\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='1.3'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.var.norole'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <line x1='-12' x2='12' y1='0' y2='0' stroke-width='1.3' transform='rotate(45, 0, 0)'></line>\n      <line x1='-12' x2='12' y1='0' y2='0' stroke-width='1.3' transform='rotate(-45, 0, 0)'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.var.class'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <line x1='-10' x2='10' y1='-3' y2='-3' stroke-width='1.3'></line>\n      <line x1='-10' x2='10' y1='3' y2='3' stroke-width='1.3'></line>\n      <line x1='-3' x2='-3' y1='-10' y2='10' stroke-width='1.3'></line>\n      <line x1='3' x2='3' y1='-10' y2='10' stroke-width='1.3'></line>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.var.abstract'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <g stroke-width='1.3'>\n        <line x1='-10' x2='10' y1='-6' y2='-6'></line>\n        <line x1='-10' x2='10' y1='-3' y2='-3'></line>\n        <line x1='-10' x2='10' y1='0' y2='0'></line>\n        <line x1='-10' x2='10' y1='3' y2='3'></line>\n        <line x1='-10' x2='10' y1='6' y2='6'></line>\n      </g>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    <g id='scg.node.var.material'>\n      <use xlinkHref='#scg.node.var.outer'></use>\n      <g stroke-width='1.3' transform='rotate(-45, 0, 0)'>\n        <line x1='-9' x2='9' y1='-6' y2='-6'></line>\n        <line x1='-11' x2='11' y1='-3' y2='-3'></line>\n        <line x1='-13' x2='13' y1='0' y2='0'></line>\n        <line x1='-11' x2='11' y1='3' y2='3'></line>\n        <line x1='-9' x2='9' y1='6' y2='6'></line>\n      </g>\n      <text x='17' y='21' class='SCgText'></text>\n    </g>\n\n    {/* <!-- arcs --> */}\n    <marker\n      id='end-arrow-access'\n      viewBox='0 -5 10 10'\n      refX='0'\n      markerWidth='8'\n      markerHeight='14'\n      orient='auto'\n      markerUnits='userSpaceOnUse'\n    >\n      <path d='M0,-4L10,0L0,4' fill='var(--scgEdgeMarkerColor, var(--scgEdgeColor, #000))'></path>\n    </marker>\n    <marker\n      id='end-arrow-common'\n      viewBox='0 -5 10 10'\n      refX='0'\n      markerWidth='10'\n      markerHeight='16'\n      orient='auto'\n      markerUnits='userSpaceOnUse'\n    >\n      <path d='M0,-4L10,0L0,4' fill='var(--scgEdgeMarkerColor, var(--scgEdgeColor, #000))'></path>\n    </marker>\n  </defs>\n)\n", "import { SignalLike, ensureValue } from '$lib/utils'\nimport { type DeepSignal } from 'deepsignal'\nimport { Ref } from 'preact'\nimport { useCallback, useMemo, useRef } from 'preact/hooks'\nimport { JSX } from 'preact/jsx-runtime'\nimport { type Elements, type IEdge, type INode } from '../types'\nimport { Alphabet } from './alphabet/alphabet'\nimport { Edge } from './alphabet/edges/edge'\nimport { Node } from './alphabet/nodes/node'\nimport style from './graph.module.css'\n\nexport interface Props {\n  elements: Elements | DeepSignal<Elements>\n  width: number\n  height: number\n  centerX: number\n  centerY: number\n  children?: JSX.Element | JSX.Element[]\n  before?: JSX.Element\n  inner?: JSX.Element\n  innerHtml?: JSX.Element\n  onMouseDown?: (e: JSX.TargetedMouseEvent<SVGSVGElement>) => void\n  onWheel?: (e: JSX.TargetedWheelEvent<SVGSVGElement | HTMLDivElement>) => void\n  onMouseEnter?: (e: JSX.TargetedMouseEvent<SVGSVGElement>) => void\n  onMouseLeave?: (e: JSX.TargetedMouseEvent<SVGSVGElement>) => void\n  onNodeMouseDown?: (e: JSX.TargetedMouseEvent<SVGGElement>, node: INode, index: number) => void\n  onNodeMouseUp?: (e: JSX.TargetedMouseEvent<SVGGElement>, node: INode, index: number) => void\n  onEdgeMouseDown?: (e: JSX.TargetedMouseEvent<SVGGElement>, edge: IEdge, index: number) => void\n  onEdgeMouseUp?: (e: JSX.TargetedMouseEvent<SVGGElement>, edge: IEdge, index: number) => void\n  onTextDoubleClick?: (node: INode) => void\n\n  /** Set of element ids to highlight */\n  highlight?: SignalLike<Set<number>>\n\n  /** Set of element ids that are non-selectable */\n  noselect?: SignalLike<Set<number> | boolean>\n\n  /** Set of element ids that have labels disabled */\n  nolabels?: SignalLike<Set<number> | true | undefined>\n\n  pref?: Ref<SVGSVGElement>\n\n  movable?: SignalLike<boolean>\n  dragging?: SignalLike<boolean>\n  selecting?: SignalLike<boolean>\n\n  transform?: SignalLike<{ x: number; y: number; zoom: number; moving: boolean }>\n  padding?: number\n}\n\ntype HookedProps = 'width' | 'height' | 'centerX' | 'centerY'\n\nexport const useBaseGraph = (width: number, height: number) => {\n  const ref = useRef<SVGSVGElement>(null)\n  const centerX = width && useMemo(() => width / 2, [width])\n  const centerY = height && useMemo(() => height / 2, [height])\n  const component = useCallback(\n    (props: Omit<Props, HookedProps> & { [K in HookedProps]?: Props[K] }) => (\n      <BaseGraph width={width} height={height} centerX={centerX} centerY={centerY} {...props} pref={ref} />\n    ),\n    [width, height]\n  )\n  const getInnerPoint = useCallback(\n    (x: number, y: number): [number, number] => {\n      if (!ref.current) return [0, 0]\n      const rect = ref.current.getBoundingClientRect()\n      return [x - rect.x - centerX, y - rect.y - centerY]\n    },\n    [ref.current]\n  )\n  return { BaseGraph: component, getInnerPoint }\n}\n\nexport const BaseGraph = (props: Props) => {\n  const transform = ensureValue(props.transform)\n  const noselect = ensureValue(props.noselect)\n  const nolabels = ensureValue(props.nolabels)\n  return (\n    <div\n      class={style.graph}\n      data-movable={ensureValue(props.movable) ? '' : undefined}\n      data-moving={transform?.moving ? '' : undefined}\n      data-dragging={ensureValue(props.dragging) ? '' : undefined}\n      data-selecting={ensureValue(props.selecting) ? '' : undefined}\n    >\n      <svg\n        ref={props.pref}\n        xmlns='http://www.w3.org/2000/svg'\n        xmlnsXlink='http://www.w3.org/1999/xlink'\n        viewBox={`-${props.centerX} -${props.centerY} ${props.width} ${props.height}`}\n        width={`${props.width}px`}\n        height={`${props.height}px`}\n        onContextMenu={e => (e.preventDefault(), e.stopPropagation())}\n        onMouseDown={props.onMouseDown}\n        onWheel={props.onWheel} // nonpassive | preventDefault | stopPropagation\n        onMouseEnter={props.onMouseEnter}\n        onMouseLeave={props.onMouseLeave}\n      >\n        <Alphabet />\n\n        {props.elements && (\n          <g transform={transform && `translate(${transform.x} ${transform.y}) scale(${transform.zoom})`}>\n            {/* User-defined inner before-extensions */}\n            {props.before}\n\n            {/* Map edges to Edge component */}\n            {props.elements.edges.map((edge, index) => (\n              <Edge\n                key={edge.id}\n                type={edge.type}\n                x1={edge.source.x}\n                y1={edge.source.y}\n                x2={edge.target.x}\n                y2={edge.target.y}\n                mousedown={e => props.onEdgeMouseDown?.(e, edge, index)}\n                mouseup={e => props.onEdgeMouseUp?.(e, edge, index)}\n                highlight={ensureValue(props.highlight)?.has(edge.id)}\n                noselect={noselect && (noselect === true || noselect.has(edge.id))}\n                padding={props.padding}\n              />\n            ))}\n\n            {/* Map nodes to Node component */}\n            {props.elements.nodes.map((node, index) => (\n              <Node\n                key={node.id}\n                type={node.type}\n                x={Math.round(node.x) || 0}\n                y={Math.round(node.y) || 0}\n                label={nolabels && (nolabels === true || nolabels.has(node.id)) ? undefined : node.label}\n                mousedown={e => props.onNodeMouseDown?.(e, node, index)}\n                mouseup={e => props.onNodeMouseUp?.(e, node, index)}\n                highlight={ensureValue(props.highlight)?.has(node.id)}\n                noselect={noselect && (noselect === true || noselect.has(node.id))}\n                padding={props.padding && props.padding + 1}\n                textDoubleClick={() => props.onTextDoubleClick?.(node)}\n              />\n            ))}\n\n            {/* User-defined inner extensions */}\n            {props.inner}\n          </g>\n        )}\n\n        {/* User-defined extensions */}\n        {props.children}\n      </svg>\n      <div\n        class={style.innerHtml}\n        style={{\n          transform:\n            transform && `translate(${transform.x}px, ${transform.y}px) scale(${transform.zoom}) translate(50%, 50%)`,\n        }}\n        onWheel={props.onWheel} // nonpassive | preventDefault | stopPropagation\n      >\n        {/* User-defined html extensions */}\n        {props.innerHtml}\n      </div>\n    </div>\n  )\n}\n", "import { EdgeType, IEdge, INode, NodeType } from '$lib/types'\nimport { ReadonlySignal, useComputed } from '@preact/signals'\nimport { DeepSignal, useDeepSignal } from 'deepsignal'\nimport { useCallback } from 'preact/hooks'\nimport { JSX } from 'preact/jsx-runtime'\n\ntype Props = {\n  addNode(node: INode): void\n  addEdge(edge: IEdge): void\n  nodes: DeepSignal<INode[]>\n  getInnerPoint: (x: number, y: number) => readonly [number, number]\n  localize: (x: number, y: number) => readonly [number, number]\n  selection?: ReadonlySignal<Set<number>>\n  Edge?: (props: CreationEdge) => JSX.Element\n}\n\nexport type CreationEdge = { x1: number; y1: number; x2: number; y2: number; type: EdgeType }\n\ntype DrawingEdge = {\n  type: EdgeType\n  source: DeepSignal<INode>\n  target: { x: number; y: number }\n}\n\nexport const withCreation = (props: Props) => {\n  const drawingEdges = useDeepSignal({ values: [] as DrawingEdge[] })\n\n  const createNode = (x: number, y: number, type: NodeType) => {\n    const newNode = { id: 0, type, x, y }\n    props.addNode(newNode)\n\n    if (drawingEdges.values.length) {\n      for (const { type, source } of drawingEdges.values) {\n        props.addEdge({ id: 0, type, source, target: newNode })\n      }\n      drawingEdges.values = []\n    }\n  }\n\n  const startDrawingEdge = (x: number, y: number, type: EdgeType) => {\n    if (!props.selection) return\n    const newValues = []\n    for (const node of props.nodes) {\n      if (props.selection.value.has(node.id)) {\n        newValues.push({ type, source: node, target: { x, y } })\n      }\n    }\n    drawingEdges.values = newValues\n  }\n\n  const updateDrawingEdges = (e: MouseEvent) => {\n    if (!props.selection || !drawingEdges.values.length) return\n    const [x, y] = props.localize(...props.getInnerPoint(e.clientX, e.clientY))\n    for (const edge of drawingEdges.values) {\n      edge.target.x = x\n      edge.target.y = y\n    }\n  }\n\n  const createEdges = (selection: Set<number>, nodes: DeepSignal<INode[]>) => {\n    if (drawingEdges.values.length) {\n      for (const { type, source } of drawingEdges.values) {\n        for (const node of nodes) {\n          if (!selection.has(node.id)) continue\n          props.addEdge({ id: 0, type, source, target: node })\n        }\n      }\n      drawingEdges.values = []\n    }\n  }\n\n  const component = useCallback(\n    () => (props.Edge ? <DrawingEdges Edge={props.Edge} edges={drawingEdges.values} /> : null),\n    [drawingEdges]\n  )\n  const isDrawingEdges = useComputed(() => !!drawingEdges.$values?.value.length)\n  return { createNode, startDrawingEdge, updateDrawingEdges, createEdges, DrawingEdges: component, isDrawingEdges }\n}\n\nconst DrawingEdges = (props: { Edge: NonNullable<Props['Edge']>; edges: DeepSignal<DrawingEdge[]> }) => {\n  return (\n    <g>\n      {props.edges.map((edge, index) => (\n        <props.Edge\n          key={index}\n          type={edge.type}\n          x1={edge.source.x}\n          y1={edge.source.y}\n          x2={edge.target.x}\n          y2={edge.target.y}\n        />\n      ))}\n    </g>\n  )\n}\n", "import { Edge, Node } from '$lib/graph/alphabet'\nimport { JSX } from 'preact/jsx-runtime'\nimport style from './disk.module.css'\nimport type { DiskEdgeOptions, DiskNodeOptions } from './options'\nimport { EdgeType, NodeType } from '$lib/types'\n\ntype BaseDiskProps = {\n  x: number\n  y: number\n  edgeOptions: DiskEdgeOptions\n  nodeOptions: DiskNodeOptions\n} & (\n  | {\n      type: 'node'\n      click: (type: 'node', x: number, y: number, e: JSX.TargetedMouseEvent<SVGGElement>, value: NodeType) => void\n    }\n  | {\n      type: 'edge'\n      click: (type: 'edge', x: number, y: number, e: JSX.TargetedMouseEvent<SVGGElement>, value: EdgeType) => void\n    }\n)\nexport const BaseDisk = (props: BaseDiskProps) => (\n  <g transform={`translate(${props.x} ${props.y})`}>\n    <g class={style.disk}>\n      {props.type === 'node'\n        ? props.nodeOptions.map(({ type, x1, y1, x2, y2, textX, textY, nodeX, nodeY }, index) => (\n            <g\n              key={type}\n              onMouseDown={e => e.stopPropagation()}\n              onMouseUp={e => props.click(props.type, props.x, props.y, e, type)}\n            >\n              <path d={`M ${x1} ${y1} A 70 70 0 0 1 ${x2} ${y2}`} stroke-width='90' />\n              <text x={textX} y={textY} stroke-width='90'>\n                {index + 1}\n              </text>\n              <Node x={nodeX} y={nodeY} type={type} noselect />\n            </g>\n          ))\n        : props.edgeOptions.map(({ type, x1, y1, x2, y2, textX, textY, edgeX1, edgeY1, edgeX2, edgeY2 }, index) => (\n            <g\n              key={type}\n              onMouseDown={e => e.stopPropagation()}\n              onMouseUp={e => props.click(props.type, props.x, props.y, e, type)}\n            >\n              <path d={`M ${x1} ${y1} A 70 70 0 0 1 ${x2} ${y2}`} stroke-width='90' />\n              <text x={textX} y={textY} stroke-width='90'>\n                {index + 1}\n              </text>\n              <Edge x1={edgeX1} y1={edgeY1} x2={edgeX2} y2={edgeY2} type={type} noselect />\n            </g>\n          ))}\n    </g>\n  </g>\n)\n", "import { EdgeType, NodeType } from '$lib/types'\n\nexport const DefaultNodeTypes = [\n  NodeType.Const,\n  NodeType.ConstClass,\n  NodeType.ConstStruct,\n  NodeType.ConstTuple,\n  NodeType.Unknown,\n  NodeType.VarTuple,\n  NodeType.VarStruct,\n  NodeType.VarClass,\n  NodeType.Var,\n]\n\nexport const DefaultEdgeTypes = [\n  EdgeType.ArcConstPermNegAccess,\n  EdgeType.ArcConstPermPosAccess,\n  EdgeType.ArcConst,\n  EdgeType.EdgeConst,\n]\n\nexport const getNodeOptions = (nodeTypes: NodeType[]) =>\n  nodeTypes.map((type, index, a) => {\n    const deg = (2 * Math.PI) / a.length\n    return {\n      type,\n      x1: Math.round(700 * Math.sin(deg * index)) / 10,\n      y1: Math.round(700 * -Math.cos(deg * index)) / 10,\n      x2: Math.round(700 * Math.sin(deg * (index + 1))) / 10,\n      y2: Math.round(700 * -Math.cos(deg * (index + 1))) / 10,\n      textX: Math.round(990 * Math.sin(0.12 + deg * index)) / 10 - 4,\n      textY: Math.round(990 * -Math.cos(0.12 + deg * index)) / 10 + 6,\n      nodeX: Math.round(740 * Math.sin(0.35 + deg * index)) / 10,\n      nodeY: Math.round(740 * -Math.cos(0.35 + deg * index)) / 10,\n    }\n  })\n\nexport const getEdgeOptions = (edgeTypes: EdgeType[]) =>\n  edgeTypes.map((type, index, a) => {\n    const deg = (2 * Math.PI) / a.length\n    return {\n      type,\n      x1: Math.round(700 * Math.sin(deg * index)) / 10,\n      y1: Math.round(700 * -Math.cos(deg * index)) / 10,\n      x2: Math.round(700 * Math.sin(deg * (index + 1))) / 10,\n      y2: Math.round(700 * -Math.cos(deg * (index + 1))) / 10,\n      textX: Math.round(990 * Math.sin(0.12 + deg * index)) / 10 - 4,\n      textY: Math.round(990 * -Math.cos(0.12 + deg * index)) / 10 + 6,\n      edgeX1: Math.round(450 * Math.sin(deg * (index + 0.5))) / 10,\n      edgeY1: Math.round(450 * -Math.cos(deg * (index + 0.5))) / 10,\n      edgeX2: Math.round(900 * Math.sin(deg * (index + 0.5))) / 10,\n      edgeY2: Math.round(900 * -Math.cos(deg * (index + 0.5))) / 10,\n    }\n  })\n\nexport type DiskNodeOptions = ReturnType<typeof getNodeOptions>\nexport type DiskEdgeOptions = ReturnType<typeof getEdgeOptions>\n", "import { EdgeType, NodeType } from '$lib/types'\nimport { useDeepSignal } from 'deepsignal'\nimport { useCallback, useEffect, useMemo } from 'preact/hooks'\nimport { BaseDisk } from './base-disk'\nimport { DefaultEdgeTypes, DefaultNodeTypes, getEdgeOptions, getNodeOptions } from './options'\n\ntype DiskOptions = {\n  nodeTypes?: NodeType[]\n  edgeTypes?: EdgeType[]\n  getInnerPoint?: (x: number, y: number) => readonly [number, number]\n}\nexport type OptionType = 'node' | 'edge'\nexport type DiskClickCallback = (\n  ...args:\n    | [type: 'node', x: number, y: number, e: MouseEvent, value: NodeType]\n    | [type: 'edge', x: number, y: number, e: MouseEvent, value: EdgeType]\n) => void\n\nexport const withDisk = (click: DiskClickCallback, options?: DiskOptions) => {\n  const nodeOptions = useMemo(() => getNodeOptions(options?.nodeTypes ?? DefaultNodeTypes), [options?.nodeTypes])\n  const edgeOptions = useMemo(() => getEdgeOptions(options?.edgeTypes ?? DefaultEdgeTypes), [options?.edgeTypes])\n  const menu = useDeepSignal({ x: 0, y: 0, type: 'node' as OptionType, shown: false })\n\n  const mouseup = useCallback((e: MouseEvent) => {\n    if (options?.getInnerPoint) {\n      const [x, y] = options.getInnerPoint(e.clientX, e.clientY)\n      const r = Math.sqrt((menu.x - x) ** 2 + (menu.y - y) ** 2)\n      if (r <= 5) return\n    }\n    menu.shown = false\n    cleanup()\n  }, [])\n\n  const keydown = useCallback((e: KeyboardEvent) => {\n    if (e.code === 'Escape') {\n      menu.shown = false\n      cleanup()\n    }\n  }, [])\n\n  const cleanup = () => {\n    document.removeEventListener('keydown', keydown)\n    document.removeEventListener('mouseup', mouseup)\n  }\n\n  // Clean up safely on unmount.\n  useEffect(() => cleanup, [])\n\n  const showDisk = (type: OptionType, x: number, y: number) => {\n    menu.type = type\n    menu.x = x\n    menu.y = y\n    menu.shown = true\n\n    document.addEventListener('mouseup', mouseup, { once: true })\n    document.addEventListener('keydown', keydown, { once: true })\n  }\n\n  const hideDisk = () => {\n    menu.shown = false\n  }\n\n  const Disk = () =>\n    menu.shown ? (\n      <BaseDisk\n        x={menu.x}\n        y={menu.y}\n        type={menu.type}\n        click={click}\n        nodeOptions={nodeOptions}\n        edgeOptions={edgeOptions}\n      />\n    ) : null\n    return { Disk, showDisk, hideDisk, isDiskOpened: menu.$shown! }\n  }\n", "import { INode } from '$lib/types'\nimport { useSignal } from '@preact/signals'\nimport { ReadonlySignal, computed } from '@preact/signals'\nimport { DeepSignal } from 'deepsignal'\nimport { useCallback, useEffect } from 'preact/hooks'\n\ntype Props = {\n  nodes: DeepSignal<INode[]>\n  selection: ReadonlySignal<Set<number>>\n  getInnerPoint: (x: number, y: number) => readonly [number, number]\n  changeNodePosition?(element: INode, x: number, y: number): void\n  nodePositionChanged?(element: INode): void\n  zoom?: ReadonlySignal<number>\n}\n\nexport const withDraggable = (props: Props) => {\n  const dragging = useSignal(false)\n  const startPoint = useSignal({ x: 0, y: 0 })\n  const totalShift = useSignal({ x: 0, y: 0 })\n\n  const startDragginig = (e: MouseEvent) => {\n    dragging.value = true\n    const [x, y] = props.getInnerPoint(e.clientX, e.clientY)\n    startPoint.value.x = x\n    startPoint.value.y = y\n    totalShift.value.x = 0\n    totalShift.value.y = 0\n    document.addEventListener('mouseup', stopDragging, { once: true })\n  }\n\n  const updateDragging = (e: MouseEvent) => {\n    const [x, y] = props.getInnerPoint(e.clientX, e.clientY)\n    const shiftX = startPoint.value.x - x\n    const shiftY = startPoint.value.y - y\n    const zoom = props.zoom?.value ?? 1\n    for (const node of props.nodes) {\n      if (!props.selection.value.has(node.id)) continue\n      props.changeNodePosition?.(node, node.x - shiftX / zoom, node.y - shiftY / zoom)\n    }\n    totalShift.value.x += shiftX\n    totalShift.value.y += shiftY\n    startPoint.value.x = x\n    startPoint.value.y = y\n  }\n\n  const abortDragging = (options?: { revert: boolean }) => {\n    if (!dragging.value) return\n    if (options?.revert) {\n      const zoom = props.zoom?.value ?? 1\n      for (const node of props.nodes) {\n        if (!props.selection.value.has(node.id)) continue\n        props.changeNodePosition?.(node, node.x + totalShift.value.x / zoom, node.y + totalShift.value.y / zoom)\n      }\n    }\n    stopDragging()\n  }\n\n  const stopDragging = useCallback(() => {\n    document.removeEventListener('mouseup', stopDragging)\n    if (props.nodePositionChanged) {\n      for (const node of props.nodes) {\n        if (!props.selection.value.has(node.id)) continue\n        props.nodePositionChanged(node)\n      }\n    }\n    dragging.value = false\n  }, [dragging, props.nodes, props.selection, props.nodePositionChanged])\n\n  useEffect(\n    () => () => document.removeEventListener('mouseup', stopDragging),\n    [dragging, props.nodes, props.selection, props.nodePositionChanged]\n  )\n\n  return { isDragging: computed(() => dragging.value), startDragginig, updateDragging, abortDragging }\n}\n", "import { INode } from '$lib/types'\n\nexport const getGroupPosition = (nodes: INode[], ids: Set<number>) => {\n  let top = Infinity\n  let bottom = -Infinity\n  let left = Infinity\n  let right = -Infinity\n  for (const node of nodes) {\n    if (!ids.has(node.id)) continue\n    if (node.x > right) right = node.x\n    if (node.x < left) left = node.x\n    if (node.y < top) top = node.y\n    if (node.y > bottom) bottom = node.y\n  }\n  return { top, bottom, right, left }\n}\n", "import { useMemo } from 'preact/hooks'\nimport style from './grouping.module.css'\nimport { cl } from '$lib/utils'\n\ntype Props = {\n  id: number\n  top: number\n  bottom: number\n  left: number\n  right: number\n  onMouseDown?: (e: MouseEvent, id: number) => void\n  opened: boolean\n  selected: boolean\n  indicator?: string\n}\n\nexport const BaseGroup = (props: Props) =>\n  useMemo(() => {\n    const P = 30\n    return (\n      <g onMouseDown={e => props.onMouseDown?.(e, props.id)}>\n        <rect\n          class={cl(style.group, props.opened && style.opened, props.selected && style.selected)}\n          x={props.left - P}\n          y={props.top - P}\n          width={props.right - props.left + P * 2}\n          height={props.bottom - props.top + P * 2}\n        />\n        {props.indicator && (\n          <>\n            <circle class={style.circle} cx={props.left - 25} cy={props.top - 25} r={15} />\n            <text class={style.indicator} x={props.left - 29.8} y={props.top - 19.2} >{props.indicator}</text>\n          </>\n        )}\n      </g>\n    )\n  }, Object.values(props))\n", "import { IGroup, INode } from '$lib/types'\nimport { ReadonlySignal, effect, useComputed, useSignal } from '@preact/signals'\nimport { DeepSignal } from 'deepsignal'\nimport { useCallback, useEffect } from 'preact/hooks'\nimport { BaseGroup } from './base-group'\nimport { getGroupPosition } from './group-position'\nimport style from './grouping.module.css'\n\ntype Props = {\n  nodes: DeepSignal<INode[]>\n  groups: DeepSignal<IGroup[]>\n  selection: ReadonlySignal<Set<number>>\n}\n\nexport const withGrouping = (props: Props) => {\n  const opened = useSignal(new Set<number>())\n  const selected = useSignal<number | null>(null)\n\n  useEffect(() => {\n    return effect(() => {\n      for (const group of props.groups) {\n        // NOTE: Might worth a partial update instead? (any reason to though?)\n        const newPosition = getGroupPosition(props.nodes, group.values)\n        for (const [key, value] of Object.entries(newPosition)) {\n          if (group.position[key as keyof typeof newPosition] !== value)\n            group.position[key as keyof typeof newPosition] = value\n        }\n      }\n    })\n  }, [props.nodes, props.groups])\n\n  const openGroup = (id: number) => {\n    opened.value.add(id)\n    opened.value = new Set(opened.value)\n    if (id === selected.value) selected.value = null\n  }\n\n  const closeGroup = (id: number) => {\n    opened.value.delete(id)\n    opened.value = new Set(opened.value)\n  }\n\n  const closeAllGroups = () => {\n    opened.value = new Set()\n  }\n\n  const selectGroup = (id: number) => (selected.value = id)\n  const deselectGroup = () => (selected.value = null)\n  const selectedGroup = useComputed(\n    () => selected.value && props.groups.find(({ id }) => id === selected.value)?.values\n  )\n\n  const Group = useCallback(\n    (args: {\n      placeholder?: true\n      nohighlight?: boolean\n      customSelection?: Set<number>\n      customIndicators?: Map<number, string>\n      onMouseDown?: (e: MouseEvent, id: number) => void\n    }) => {\n      return (\n        <g class={args.placeholder && style.placeholder}>\n          {props.groups.map(group => (\n            <BaseGroup\n              key={group.id}\n              id={group.id}\n              {...group.position}\n              onMouseDown={args.onMouseDown}\n              opened={!args.nohighlight && opened.value?.has(group.id)}\n              selected={\n                args.customSelection\n                  ? args.customSelection.has(group.id)\n                  : !args.nohighlight && selected.value === group.id\n              }\n              indicator={args.customIndicators?.get(group.id)}\n            />\n          ))}\n        </g>\n      )\n    },\n    [props.groups]\n  )\n\n  return {\n    Group,\n    openGroup,\n    closeGroup,\n    closeAllGroups,\n    selectGroup,\n    deselectGroup,\n    selectedGroup,\n    selectedGroupId: selected,\n  }\n}\n", "import { JSX } from 'preact/jsx-runtime'\nimport style from './menu.module.css'\n\nexport type MenuButton = { content: JSX.Element | undefined; action: (e: MouseEvent, x: number, y: number) => void }\n\ntype Props = { x: number; y: number; buttons: MenuButton[]; leave: () => void; shown: boolean; padding: number }\nexport const BaseMenu = (props: Props) => {\n  if (!props.buttons.length) return null\n  return (\n    <div\n      class={`${style.menu} ${props.shown ? '' : style.hidden}`}\n      style={{ transform: `translate(${props.x}px, ${props.y}px) translate(-50%, 18px)` }}\n      onMouseLeave={props.leave}\n    >\n      {props.buttons.map((button, index) => (\n        <div key={index} class={style.button} onClick={e => button.action(e, props.x, props.y)}>\n          {button.content}\n        </div>\n      ))}\n    </div>\n  )\n}\n", "import { INode } from '$lib/types'\nimport { ReadonlySignal, useComputed, useSignal } from '@preact/signals'\nimport { useCallback, useEffect, useRef } from 'preact/hooks'\nimport { BaseMenu, MenuButton } from './base-menu'\nimport { DeepSignal } from 'deepsignal'\n\ntype Props = {\n  nodes: DeepSignal<INode[]>\n  selection: ReadonlySignal<Set<number>>\n  visible: ReadonlySignal<boolean>\n  buttons: ReadonlySignal<MenuButton[]>\n  padding?: number\n}\n\nexport const withMenu = (props: Props) => {\n  const shown = useSignal(false)\n  const timer = useRef(0)\n\n  // TODO: Do not produce a new set in the selection plugin.\n  // This will eliminate the excessive amount of re-rendering.\n  const position = useComputed(() => {\n    if (!props.selection.value.size || !props.visible.value) return null\n    const current = { x: -Infinity, y: -Infinity }\n    for (const node of props.nodes) {\n      if (!props.selection.value.has(node.id)) continue\n      if (node.y < current.y) continue\n      current.x = node.x\n      current.y = node.y\n    }\n    return current\n  })\n\n  useEffect(() => {\n    if (props.selection.value?.size && props.visible.value) {\n      shown.value = false\n      self.clearTimeout(timer.current)\n      timer.current = self.setTimeout(() => {\n        shown.value = true\n        document.addEventListener('mousedown', hideMenu, { once: true, capture: true })\n      }, 600)\n    }\n  }, [position.value])\n\n  const hideMenu = useCallback(() => {\n    shown.value = false\n  }, [])\n\n  useEffect(() => document.removeEventListener('mousedown', hideMenu, { capture: true }), [])\n\n  const component = () =>\n    position.value ? (\n      <BaseMenu\n        {...position.value}\n        buttons={props.buttons.value}\n        leave={hideMenu}\n        shown={shown.value}\n        padding={props.padding ?? 0}\n      />\n    ) : null\n\n  return { Menu: component, hideMenu, menuNodePosition: position }\n}\n\nexport { type MenuButton }\n", "import { useSignal } from '@preact/signals'\nimport { useDeepSignal } from 'deepsignal'\n\ntype Props = {\n  width: number\n  height: number\n  getInnerPoint: (x: number, y: number) => readonly [number, number]\n}\n\nexport const withMovable = (props: Props) => {\n  const centerX = props.width / 2\n  const centerY = props.height / 2\n\n  const transform = useDeepSignal({ x: 0, y: 0, zoom: 1, moving: false })\n  const localize = (x: number, y: number) =>\n    [(x - transform.x) / transform.zoom, (y - transform.y) / transform.zoom] as const\n  const globalize = (x: number, y: number) =>\n    [x * transform.zoom + transform.x, y * transform.zoom + transform.y] as const\n\n  // Dragging-based moving\n  const startPoint = useSignal(null as { x: number; y: number } | null)\n\n  const startMoving = (e: MouseEvent) => {\n    const [x, y] = props.getInnerPoint(e.clientX, e.clientY)\n    startPoint.value = { x, y }\n  }\n\n  const updateMoving = (e: MouseEvent) => {\n    const [x, y] = props.getInnerPoint(e.clientX, e.clientY)\n\n    startPoint.value = { x, y }\n  }\n\n  const stopMoving = () => {\n    startPoint.value = null\n  }\n\n  // Touch-based moving\n  const onwheel = (e: WheelEvent) => {\n    e.preventDefault()\n    if (e.ctrlKey) {\n      let deltaZoom = e.deltaY * 0.01\n      if (transform.zoom - deltaZoom < 0.1) deltaZoom = transform.zoom - 0.1\n      else if (transform.zoom - deltaZoom > 5) deltaZoom = transform.zoom - 5\n\n      transform.x += (deltaZoom / transform.zoom) * (e.offsetX - centerX - transform.x)\n      transform.y += (deltaZoom / transform.zoom) * (e.offsetY - centerY - transform.y)\n      transform.zoom -= deltaZoom\n    } else {\n      transform.x -= e.deltaX\n      transform.y -= e.deltaY\n    }\n  }\n\n  return {\n    transform,\n    centerX,\n    centerY,\n    localize,\n    globalize,\n    onwheel,\n    zoom: transform.$zoom,\n    startMoving,\n    updateMoving,\n    stopMoving,\n  }\n}\n", "import { INode } from '$lib/types'\nimport { useSignal } from '@preact/signals'\nimport { DeepSignal } from 'deepsignal'\nimport { useCallback, useEffect, useRef } from 'preact/hooks'\nimport { JSX } from 'preact/jsx-runtime'\nimport style from './renaming.module.css'\n\ntype Props = {\n  submit?: (element: INode, newValue: string) => void\n}\n\nexport const withRenaming = (props: Props) => {\n  const isRenaming = useSignal(null as { node: DeepSignal<INode> } | null)\n  const startRenaming = (node: DeepSignal<INode>) => {\n    isRenaming.value = { node }\n  }\n\n  const stopRenaming = () => {\n    isRenaming.value = null\n  }\n\n  const component = useCallback(\n    () =>\n      isRenaming.value && (\n        <RenamingArea\n          x={Math.round(isRenaming.value.node.x) || 0}\n          y={Math.round(isRenaming.value.node.y) || 0}\n          value={isRenaming.value.node.label ?? ''}\n          submit={value => isRenaming.value && (props.submit?.(isRenaming.value.node, value), stopRenaming())}\n        />\n      ),\n    [isRenaming]\n  )\n\n  return { RenamingArea: component, startRenaming, stopRenaming, isRenaming }\n}\n\nexport const RenamingArea = (props: { x: number; y: number; value: string; submit: (newValue: string) => void }) => {\n  const ref = useRef<HTMLInputElement>(null)\n  useEffect(() => ref.current?.focus(), [])\n\n  const onKeyDown = (e: JSX.TargetedKeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') props.submit(e.currentTarget.value)\n  }\n\n  return (\n    <div class={style.component} style={{ transform: `translate(${props.x + 19 - 5.8 - 3.5}px, ${props.y - 11 - 5.8}px)` }}>\n      <input\n        ref={ref}\n        class={style.input}\n        type='text'\n        value={props.value}\n        onKeyDown={onKeyDown}\n        onBlur={e => props.submit(e.currentTarget.value)}\n      />\n    </div>\n  )\n}\n", "export type AreaSelectionProps = { x1: number; y1: number; x2: number; y2: number }\n\nexport const AreaSelection = (props: AreaSelectionProps) => {\n  return (\n    <rect\n      x={Math.min(props.x1, props.x2)}\n      y={Math.min(props.y1, props.y2)}\n      width={Math.abs(props.x1 - props.x2)}\n      height={Math.abs(props.y1 - props.y2)}\n      rx='1'\n      ry='1'\n      stroke-width='1'\n      fill='#0048b61a'\n      stroke='#2669cf'\n      pointer-events='none'\n    />\n  )\n}\n", "import { INode } from '$lib/types'\nimport { batch, useComputed, useSignal } from '@preact/signals'\nimport { deepSignal } from 'deepsignal'\nimport { useCallback, useEffect } from 'preact/hooks'\nimport { AreaSelection, AreaSelectionProps } from './area-selection'\n\ntype Props = {\n  nodes: INode[]\n  getInnerPoint: (x: number, y: number) => readonly [number, number]\n  localize?: (x: number, y: number) => readonly [number, number]\n  onSelectionStop?: (selection: Set<number>) => void\n  inversion?: true\n  padding?: number\n}\n\nexport const withSelection = (props: Props) => {\n  const localize = props.localize ?? ((x, y) => [x, y])\n\n  const area = useSignal(null as AreaSelectionProps | null)\n  const progress = useSignal(new Set<number>())\n  const values = useSignal(new Set<number>())\n  const postponedClickedNodeId = useSignal(null as number | null)\n\n  const clearSelection = useCallback(() => {\n    if (values.value.size) values.value = new Set()\n  }, [values])\n\n  const startSelection = (e: MouseEvent, options?: { deselection?: boolean; selection?: boolean; clear?: boolean }) => {\n    const [x, y] = props.getInnerPoint(e.clientX, e.clientY)\n\n    // Select a single node is clicked on it\n    const [localX, localY] = localize(x, y) ?? [x, y]\n    const padding = props.padding ?? 15\n    const clickedNode = props.nodes.findLast(({ x, y }) => Math.sqrt((x - localX) ** 2 + (y - localY) ** 2) <= padding)\n\n    const newProgress = options?.clear ? new Set<number>() : new Set(values.value)\n    if (clickedNode) {\n      const processSingleClick = (values: Set<number>) => {\n        if (!options?.deselection && !(props.inversion && !options?.selection && values.has(clickedNode.id))) {\n          values.add(clickedNode.id)\n        } else values.delete(clickedNode.id)\n      }\n      // If clear => select now; otherwise select later (on mouse move??! might be excessive -- it is!!)\n      //       ^ mouse down ^                  ^ mouse move ^  or  ^ mouse up ^ (whatever fires first)\n      // The problem is that mouse move might not be triggered (so we need to process stuff on mouse up - uh oh)\n      if (options?.clear) {\n        // process on mouse up\n        postponedClickedNodeId.value = clickedNode.id\n      } else {\n        processSingleClick(newProgress)\n      }\n    }\n    const dontClear = postponedClickedNodeId.value && values.value.has(postponedClickedNodeId.value)\n    batch(() => {\n      area.value = deepSignal({ x1: x, y1: y, x2: x, y2: y })\n      progress.value = dontClear ? new Set(values.value) : newProgress\n      if (options?.clear && !dontClear) values.value = new Set<number>()\n    })\n\n    document.addEventListener('mouseup', stopSelection, { once: true })\n  }\n\n  const updateSelection = (e: MouseEvent, options?: { deselection?: boolean; selection?: boolean }) => {\n    if (!area.value) return\n\n    // NOTE: I don't think this ever even happens.. We ONLY postpone the click on a highlighted node\n    // cancel single click processing on mouse up (mouse move => not a single click)\n    if (postponedClickedNodeId.value) {\n      // Select a newly-clicked node so it can be dragged immediately\n      values.value.add(postponedClickedNodeId.value)\n      postponedClickedNodeId.value = null\n      area.value = null\n      return\n    }\n    // this node will be automatically picked up later in this function\n\n    const [x, y] = props.getInnerPoint(e.clientX, e.clientY)\n    area.value.x2 = x\n    area.value.y2 = y\n\n    const padding = props.padding ?? 16\n    const [x1, y1] = localize(area.value.x1, area.value.y1)\n    const [x2, y2] = localize(area.value.x2, area.value.y2)\n    const fromX = Math.min(x1, x2) - padding\n    const toX = Math.max(x1, x2) + padding\n    const fromY = Math.min(y1, y2) - padding\n    const toY = Math.max(y1, y2) + padding\n\n    const newProgress = new Set<number>()\n    for (const index of props.nodes.keys()) {\n      const node = props.nodes.at(-index - 1)!\n      if (node.x >= fromX && node.x <= toX && node.y >= fromY && node.y <= toY) {\n        if (!options?.deselection && !(props.inversion && !options?.selection && values.value.has(node.id))) {\n          newProgress.add(node.id)\n        }\n      } else if (values.value.has(node.id)) {\n        newProgress.add(node.id)\n      }\n    }\n    progress.value = newProgress\n  }\n\n  const stopSelection = useCallback(() => {\n    document.removeEventListener('mouseup', stopSelection)\n    if (!area.value) return\n    area.value = null\n    let newValues: Set<number>\n\n    // process the postponed single click\n    if (postponedClickedNodeId.value) {\n      newValues = new Set()\n      newValues.add(postponedClickedNodeId.value)\n      postponedClickedNodeId.value = null\n    } else {\n      newValues = new Set(progress.value)\n    }\n\n    props.onSelectionStop?.(newValues)\n    values.value = newValues\n    progress.value = new Set()\n  }, [props.onSelectionStop])\n\n  useEffect(() => () => document.removeEventListener('mouseup', stopSelection), [stopSelection])\n\n  // useEffect(() => {\n  //   console.warn('hola')\n  //   return () => console.warn('bye')\n  // }, [])\n\n  return {\n    /** Area selection rectangle */\n    AreaSelection: useCallback(() => area.value && <AreaSelection {...area.value} />, [area]),\n    selection: useComputed(() => area.value ? progress.value : values.value),\n    isSelecting: useComputed(\n      () => !!area.value && (area.value.x1 !== area.value.x2 || area.value.y1 !== area.value.y2)\n    ),\n    clearSelection,\n    startSelection,\n    updateSelection,\n  }\n}\n", "import { useComputed } from '@preact/signals'\nimport { DeepSignal } from 'deepsignal'\nimport { useCallback, useEffect, useRef } from 'preact/hooks'\nimport type { JSX } from 'preact/jsx-runtime'\nimport { EdgeType, IGroup, NodeType, type Elements, type IEdge, type INode } from '../types'\nimport { Edge } from './alphabet'\nimport { useBaseGraph } from './base-graph'\nimport { CreationEdge, withCreation } from './plugins/creation/creation'\nimport { withDisk } from './plugins/disk'\nimport { withDraggable } from './plugins/draggable/draggable'\nimport { getGroupPosition } from './plugins/grouping'\nimport { withGrouping } from './plugins/grouping/grouping'\nimport { MenuButton, withMenu } from './plugins/menu/menu'\nimport { withMovable } from './plugins/movable/movable'\nimport { withRenaming } from './plugins/renaming/renaming'\nimport { withSelection } from './plugins/selection/selection'\n\nexport interface Props {\n  elements: DeepSignal<Elements>\n  addNode(node: DeepSignal<INode>): void\n  addEdge(edge: IEdge): void\n  addGroup(group: IGroup): void\n  changeNodeLabel?(element: INode, label: string): void\n  changeNodePosition?(element: INode, x: number, y: number): void\n  nodePositionChanged?(element: INode): void\n  removeNode?(id: number): void\n  width: number\n  height: number\n  nodeTypes?: NodeType[]\n  edgeTypes?: EdgeType[]\n  padding?: number\n  objectSelection?: {\n    type: 'group'\n    action: (id: number) => void\n    values: Set<number>\n    indicators?: Map<number, string>\n  }\n  buttonIcons?: Partial<Record<'type' | 'arrow' | 'group' | 'rename' | 'delete', JSX.Element>>\n}\n\nexport const Graph = ({\n  elements,\n  width,\n  height,\n  padding,\n  addNode,\n  addEdge,\n  addGroup,\n  changeNodeLabel,\n  changeNodePosition,\n  nodePositionChanged,\n  removeNode,\n  edgeTypes,\n  nodeTypes,\n  objectSelection,\n  buttonIcons\n}: Props) => {\n  /// ----------------------------------------- ///\n  /// ----------------- Core ------------------ ///\n  /// ----------------------------------------- ///\n\n  const { BaseGraph, getInnerPoint } = useBaseGraph(width, height)\n\n  /// ----------------------------------------- ///\n  /// ---------------- Plugins ---------------- ///\n  /// ----------------------------------------- ///\n\n  // const duplication = useDuplication({ addNode, addEdge, nodes: elements.nodes })\n\n  const { transform, onwheel, localize, globalize, zoom } = withMovable({\n    width,\n    height,\n    getInnerPoint,\n  })\n\n  const { AreaSelection, selection, startSelection, updateSelection, clearSelection, isSelecting } = withSelection({\n    nodes: elements.nodes,\n    getInnerPoint,\n    localize,\n    inversion: true,\n    padding,\n    onSelectionStop: useCallback((selection: Set<number>) => createEdges(selection, elements.nodes), [elements.nodes]),\n  })\n\n  const { Group, openGroup, closeAllGroups, selectGroup, deselectGroup, selectedGroup, selectedGroupId } = withGrouping(\n    {\n      nodes: elements.nodes,\n      groups: elements.groups,\n      selection,\n    }\n  )\n\n  const { RenamingArea, startRenaming, isRenaming } = withRenaming({ submit: changeNodeLabel })\n  const nolabels = useComputed(() => (isRenaming.value ? new Set([isRenaming.value.node.id]) : undefined))\n\n  const highlight = useComputed(\n    () => objectSelection?.values || nolabels.value || selectedGroup.value || selection.value\n  )\n\n  const { startDragginig, updateDragging, isDragging } = withDraggable({\n    nodes: elements.nodes,\n    selection: highlight,\n    getInnerPoint,\n    zoom,\n    changeNodePosition,\n    nodePositionChanged,\n  })\n\n  const { createNode, startDrawingEdge, updateDrawingEdges, createEdges, DrawingEdges, isDrawingEdges } = withCreation({\n    addNode,\n    addEdge,\n    getInnerPoint,\n    localize,\n    nodes: elements.nodes,\n    Edge: useCallback((props: CreationEdge) => <Edge {...props} noselect />, []),\n    selection,\n  })\n\n  const { Disk, showDisk, hideDisk, isDiskOpened } = withDisk(\n    (type, x, y, _e, value) => {\n      hideDisk()\n      if (menuNodePosition.current && menuNodePosition.current.x === x && menuNodePosition.current.y === y) {\n        const array = type === 'node' ? elements.nodes : elements.edges\n        for (const element of array) {\n          if (!selection.value.has(element.id)) continue\n          element.type = value\n        }\n      } else if (type === 'node') createNode(...localize(x, y), value)\n      else startDrawingEdge(x, y, value)\n    },\n    { nodeTypes, edgeTypes, getInnerPoint }\n  )\n\n  const menuNodePosition = useRef<{ x: number; y: number } | null>(null)\n  const { Menu } = withMenu({\n    nodes: elements.nodes,\n    selection,\n    visible: useComputed(\n      () => !isSelecting.value && !isDragging.value && !isDiskOpened.value && !isDrawingEdges.value && !isRenaming.value\n    ),\n    buttons: useComputed<MenuButton[]>(() => {\n      const buttons: MenuButton[] = [\n        {\n          content: buttonIcons ? buttonIcons.type : <span>T</span>,\n          action: (_, x, y) => {\n            showDisk('node', ...globalize(x, y))\n            menuNodePosition.current = { x, y }\n            // WARN: No clean up (intended), but would be great to have one later.\n            // TODO: Come up with a generic solution of adding and cleaning up global events.\n            document.addEventListener('mouseup', () => (menuNodePosition.current = null), { once: true })\n          },\n        },\n        { content: buttonIcons ? buttonIcons.arrow : <span>A</span>, action: (_, x, y) => showDisk('edge', ...globalize(x, y)) },\n        {\n          content: buttonIcons ? buttonIcons.group : <span>G</span>,\n          action: () =>\n            addGroup({\n              id: 0,\n              label: '',\n              values: selection.value,\n              position: getGroupPosition(elements.nodes, selection.value),\n            }),\n        },\n      ]\n      if (changeNodeLabel && selection.value.size === 1) {\n        const node = elements.nodes.find(_ => selection.value.has(_.id))\n        if (node) {\n          buttons.push({\n            content: buttonIcons ? buttonIcons.rename : <span>I</span>,\n            action: () => startRenaming(node),\n          })\n        }\n      }\n      if (removeNode) {\n        buttons.push({\n          content: buttonIcons ? buttonIcons.delete : <span>D</span>,\n          action: () => {\n            for (const id of selection.value) removeNode(id)\n          },\n        })\n      }\n      return buttons.filter(button => button.content)\n    }),\n  })\n\n  /// ----------------------------------------- ///\n  /// ------------- Global events ------------- ///\n  /// ----------------------------------------- ///\n\n  const mousemove = useCallback(\n    (e: MouseEvent) => {\n      if (isDrawingEdges.value && !isDiskOpened.value) {\n        updateDrawingEdges(e)\n      }\n\n      if (isDragging.value) {\n        updateDragging(e)\n      }\n      updateSelection(e, { deselection: e.altKey, selection: e.ctrlKey || e.metaKey })\n    },\n    [updateSelection, updateDragging, isDragging, isDrawingEdges]\n  )\n\n  useEffect(() => {\n    document.addEventListener('mousemove', mousemove, true)\n    return () => document.removeEventListener('mousemove', mousemove, true)\n  }, [mousemove])\n  useEffect(() => () => document.removeEventListener('mousemove', mousemove, true), [])\n\n  /// ------------ Render component ----------- ///\n  return (\n    <BaseGraph\n      width={width}\n      height={height}\n      centerX={width / 2}\n      centerY={height / 2}\n      elements={elements}\n      padding={padding}\n      transform={transform}\n      highlight={objectSelection ? undefined : highlight}\n      noselect={!!objectSelection || isSelecting}\n      dragging={useComputed(() => isDragging.value || isDrawingEdges.value)}\n      onTextDoubleClick={node => startRenaming(node)}\n      nolabels={nolabels}\n      onWheel={e => {\n        onwheel(e)\n        if (isDrawingEdges.value) updateDrawingEdges(e)\n      }}\n      onMouseDown={e => {\n        if (objectSelection) return\n        if (isDiskOpened) hideDisk()\n\n        deselectGroup()\n        if (e.target === e.currentTarget) {\n          closeAllGroups()\n        }\n\n        // Left click\n        if (e.buttons === 1) {\n          startSelection(e, {\n            deselection: e.altKey,\n            selection: e.ctrlKey || e.metaKey,\n            clear: !e.shiftKey && !e.altKey && !e.ctrlKey && !e.metaKey,\n          })\n          return\n        }\n\n        // Right click\n        if (e.buttons === 2) {\n          if (e.shiftKey) return\n\n          //  Do something\n          showDisk('node', ...getInnerPoint(e.clientX, e.clientY))\n          return\n        }\n      }}\n      onNodeMouseDown={(e, node) => {\n        if (objectSelection) return\n        if (isDiskOpened) hideDisk()\n\n        // Left click\n        if (e.buttons === 1) {\n          if (e.shiftKey) return\n\n          if (e.ctrlKey || e.metaKey || e.altKey) {\n            e.stopPropagation()\n            return\n          }\n          startDragginig(e)\n          return\n        }\n\n        // Right click\n        if (e.buttons === 2) {\n          if (e.shiftKey) return\n\n          e.stopPropagation()\n          startSelection(e, { clear: true })\n          showDisk('edge', ...globalize(node.x, node.y))\n        }\n      }}\n      before={\n        <>\n          <Group\n            nohighlight={!!objectSelection}\n            customSelection={objectSelection && new Set(objectSelection.values)}\n            onMouseDown={useCallback((_e: MouseEvent, _id: number) => {\n              // e.stopPropagation()\n              // console.log('closing before')\n              // closeGroup(id)\n            }, [])}\n          />\n        </>\n      }\n      inner={\n        <>\n          <Group\n            placeholder\n            nohighlight={!!objectSelection}\n            customSelection={objectSelection?.values}\n            customIndicators={objectSelection?.indicators}\n            onMouseDown={useCallback(\n              (e: MouseEvent, id: number) => {\n                if (objectSelection && objectSelection.type === 'group') {\n                  objectSelection.action(id)\n                  return\n                }\n                if (isDiskOpened) hideDisk()\n\n                e.stopPropagation()\n                startDragginig(e)\n                if (selectedGroupId.value === id) {\n                  const mouseup = () => {\n                    closeAllGroups()\n                    openGroup(id)\n                    document.removeEventListener('mousemove', mousemove)\n                  }\n                  const mousemove = () => {\n                    document.removeEventListener('mouseup', mouseup)\n                  }\n                  document.addEventListener('mouseup', mouseup, { once: true })\n                  document.addEventListener('mousemove', mousemove, { once: true })\n                } else {\n                  selectGroup(id)\n                  clearSelection()\n                }\n              },\n              [objectSelection]\n            )}\n          />\n          {DrawingEdges && <DrawingEdges />}\n        </>\n      }\n      innerHtml={\n        <>\n          <Menu />\n          <RenamingArea />\n        </>\n      }\n    >\n      <Disk />\n      <AreaSelection />\n    </BaseGraph>\n  )\n}\n", "import { render } from 'preact'\nexport { Graph, type Props as GraphProps } from './graph/graph'\nexport {\n  type INode as GraphNode,\n  type IEdge as GraphEdge,\n  type IGroup as GraphGroup,\n  type Elements as GraphElements,\n  NodeType,\n  EdgeType,\n} from './types'\n\nimport { Graph, Props } from './graph/graph'\nexport default (id: string, props: Props) => render(<Graph {...props} />, document.getElementById(id)!)\n\n// import { deepSignal, useDeepSignal } from 'deepsignal'\n// import { Elements } from './types'\n// export const useCreateGraph = () => useDeepSignal<Elements>({ nodes: [], edges: [] })\n// export const createGraph = () => deepSignal<Elements>({ nodes: [], edges: [] })\n"],
  "mappings": "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",
  "names": ["ensureValue", "something", "value", "cl", "args", "classlist", "arg", "key", "hasOwnProperty", "call", "f", "u", "t", "o", "i", "a", "c", "p", "l", "r", "Node", "type", "noselect", "x", "y", "label", "mousedown", "mouseup", "textDoubleClick", "highlight", "padding", "_jsxs", "children", "class", "style", "container", "onMouseDown", "onMouseUp", "_jsx", "cx", "cy", "fill", "node", "xlinkHref", "text", "onDblClick", "NodeType", "Unknown", "Const", "ConstTuple", "ConstStruct", "ConstRole", "ConstNorole", "ConstClass", "ConstAbstract", "ConstMaterial", "Var", "VarTuple", "VarStruct", "VarRole", "VarNorole", "VarClass", "VarAbstract", "VarMaterial", "EdgeType", "EdgeConst", "ArcConst", "ArcConstPermPosAccess", "ArcConstPermNegAccess", "ArcConstPermFuzAccess", "x1", "y1", "x2", "y2", "rad", "Math", "atan2", "cos", "sin", "styles", "edge", "d", "stroke", "EDGE_TYPES", "Edge", "MyEdge", "length", "sqrt", "pow", "dx", "dy", "Alphabet", "id", "width", "height", "transform", "viewBox", "refX", "markerWidth", "markerHeight", "orient", "markerUnits", "useBaseGraph", "ref", "useRef", "centerX", "useMemo", "centerY", "component", "useCallback", "props", "BaseGraph", "pref", "getInnerPoint", "current", "rect", "getBoundingClientRect", "nolabels", "graph", "movable", "undefined", "moving", "dragging", "selecting", "xmlns", "xmlnsXlink", "onContextMenu", "e", "preventDefault", "stopPropagation", "onWheel", "onMouseEnter", "onMouseLeave", "elements", "zoom", "before", "edges", "map", "index", "source", "target", "onEdgeMouseDown", "onEdgeMouseUp", "has", "nodes", "round", "onNodeMouseDown", "onNodeMouseUp", "onTextDoubleClick", "inner", "innerHtml", "withCreation", "drawingEdges", "useDeepSignal", "values", "createNode", "newNode", "addNode", "addEdge", "startDrawingEdge", "selection", "newValues", "push", "updateDrawingEdges", "localize", "clientX", "clientY", "createEdges", "DrawingEdges", "isDrawingEdges", "useComputed", "$values", "BaseDisk", "disk", "nodeOptions", "textX", "textY", "nodeX", "nodeY", "click", "edgeOptions", "edgeX1", "edgeY1", "edgeX2", "edgeY2", "DefaultNodeTypes", "DefaultEdgeTypes", "getNodeOptions", "nodeTypes", "deg", "PI", "getEdgeOptions", "edgeTypes", "withDisk", "options", "menu", "shown", "cleanup", "keydown", "code", "removeEventListener", "useEffect", "Disk", "showDisk", "addEventListener", "once", "hideDisk", "isDiskOpened", "$shown", "withDraggable", "useSignal", "startPoint", "totalShift", "startDragginig", "stopDragging", "updateDragging", "shiftX", "shiftY", "changeNodePosition", "abortDragging", "revert", "nodePositionChanged", "document", "isDragging", "computed", "getGroupPosition", "ids", "top", "Infinity", "bottom", "left", "right", "BaseGroup", "group", "opened", "selected", "P", "indicator", "_Fragment", "circle", "Object", "withGrouping", "Set", "effect", "groups", "newPosition", "entries", "position", "openGroup", "add", "closeGroup", "delete", "closeAllGroups", "selectGroup", "deselectGroup", "selectedGroup", "find", "Group", "placeholder", "nohighlight", "customSelection", "customIndicators", "get", "selectedGroupId", "BaseMenu", "buttons", "hidden", "leave", "button", "onClick", "action", "content", "withMenu", "timer", "size", "visible", "clearTimeout", "self", "setTimeout", "hideMenu", "capture", "Menu", "menuNodePosition", "withMovable", "globalize", "startMoving", "updateMoving", "stopMoving", "onwheel", "ctrlKey", "deltaZoom", "deltaY", "offsetX", "offsetY", "deltaX", "$zoom", "withRenaming", "isRenaming", "startRenaming", "stopRenaming", "RenamingArea", "submit", "focus", "onKeyDown", "currentTarget", "input", "onBlur", "AreaSelection", "min", "abs", "rx", "ry", "withSelection", "area", "progress", "postponedClickedNodeId", "clearSelection", "startSelection", "localX", "localY", "clickedNode", "findLast", "newProgress", "clear", "processSingleClick", "deselection", "inversion", "dontClear", "batch", "deepSignal", "stopSelection", "updateSelection", "fromX", "toX", "max", "fromY", "toY", "keys", "at", "onSelectionStop", "isSelecting", "Graph", "addGroup", "changeNodeLabel", "removeNode", "objectSelection", "buttonIcons", "_e", "array", "element", "_", "arrow", "rename", "filter", "mousemove", "altKey", "metaKey", "shiftKey", "_id", "indicators", "render", "getElementById"]
}
