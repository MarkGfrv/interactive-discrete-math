import {
  M,
  g as g2
} from "./chunk-ZEHCN5TK.js";
import {
  E,
  r,
  useComputed,
  useSignal,
  w
} from "./chunk-O7WJARF6.js";
import {
  F,
  _,
  q,
  x
} from "./chunk-C32UJPNP.js";
import {
  N,
  g,
  l
} from "./chunk-HD5T2LL3.js";
import "./chunk-TYRVL62N.js";

// node_modules/.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/dist/index.js
import "/home/pengvinchik/coursach/interactive-discrete-math/node_modules/.pnpm/@ennealand+enigraph@0.0.10_@preact+signals-core@1.8.0/node_modules/@ennealand/enigraph/dist/style.css";
var Ke = "_9vkj";
var Ie = "e43s";
var Te = "a3s2";
var Ve = "x4jx";
var Be = "nm1e";
var B = {
  container: Ke,
  highlight: Ie,
  node: Te,
  text: Ve,
  noselect: Be
};
var G = (e) => e && typeof e == "object" && "value" in e ? e.value : e;
var te = (...e) => {
  let o = "";
  for (const n of e)
    if (n) {
      if (typeof n == "string")
        o += o ? " " + n : n;
      else if (typeof n == "object")
        for (const c in n)
          ({}).hasOwnProperty.call(n, c) && n[c] && (o += o ? " " + c : c);
    }
  return o;
};
var Oe = 0;
function t(e, o, n, c, s, u) {
  var l2, g3, v = {};
  for (g3 in o)
    g3 == "ref" ? l2 = o[g3] : v[g3] = o[g3];
  var x2 = { type: e, props: v, key: n, ref: l2, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: --Oe, __i: -1, __u: 0, __source: s, __self: u };
  if (typeof e == "function" && (l2 = e.defaultProps))
    for (g3 in l2)
      v[g3] === void 0 && (v[g3] = l2[g3]);
  return l.vnode && l.vnode(x2), x2;
}
var ye = ({
  type: e,
  noselect: o,
  x: n,
  y: c,
  label: s,
  mousedown: u,
  mouseup: l2,
  textDoubleClick: g3,
  highlight: v,
  padding: x2
}) => t("g", {
  children: [t("g", {
    class: te(B.container, o && B.noselect, v && B.highlight),
    onMouseDown: u,
    onMouseUp: l2,
    children: [x2 && t("circle", {
      cx: n,
      cy: c,
      r: x2,
      fill: "transparent"
    }), t("use", {
      class: B.node,
      xlinkHref: `#scg.node.${e}`,
      x: n,
      y: c
    })]
  }), s && t("text", {
    x: n + 17,
    y: c + 21,
    class: B.text,
    onDblClick: g3,
    children: s
  })]
});
var E2 = ((e) => (e.Unknown = "unknown", e.Const = "const", e.ConstTuple = "const.tuple", e.ConstStruct = "const.struct", e.ConstRole = "const.role", e.ConstNorole = "const.norole", e.ConstClass = "const.class", e.ConstAbstract = "const.abstract", e.ConstMaterial = "const.material", e.Var = "var", e.VarTuple = "var.tuple", e.VarStruct = "var.struct", e.VarRole = "var.role", e.VarNorole = "var.norole", e.VarClass = "var.class", e.VarAbstract = "var.abstract", e.VarMaterial = "var.material", e))(E2 || {});
var A = ((e) => (e.EdgeConst = "EdgeConst", e.ArcConst = "ArcConst", e.ArcConstPermPosAccess = "AccessConstPosPerm", e.ArcConstPermNegAccess = "AccessConstNegPerm", e.ArcConstPermFuzAccess = "AccessConstFuzPerm", e))(A || {});
var Re = "_7bu2";
var Ue = "_386z";
var We = "nvzv";
var Fe = "d84p";
var Ne = "yjnd";
var qe = "_4193";
var m = {
  container: Re,
  highlight: Ue,
  edge: We,
  fill: Fe,
  stroke: Ne,
  noselect: qe
};
var Ze = ({
  x1: e,
  y1: o,
  x2: n,
  y2: c
}) => {
  const s = Math.atan2(c - o, n - e);
  return n -= Math.cos(s) * 10, c -= Math.sin(s) * 10, t("g", {
    class: m.edge,
    children: [t("path", {
      "stroke-width": "7.5",
      d: `M ${e} ${o} L ${n} ${c}`,
      class: m.stroke
    }), t("path", {
      "stroke-width": "5",
      class: m.fill,
      d: `M ${e} ${o} L ${n} ${c}`,
      "marker-end": 'url("#end-arrow-common")'
    })]
  });
};
var Je = ({
  x1: e,
  y1: o,
  x2: n,
  y2: c
}) => {
  const s = Math.atan2(c - o, n - e);
  return n -= Math.cos(s) * 10, c -= Math.sin(s) * 10, t("g", {
    class: m.edge,
    children: [t("path", {
      class: m.stroke,
      "stroke-width": "1.5",
      d: `M ${e} ${o} L ${n} ${c}`,
      "marker-end": 'url("#end-arrow-access")'
    }), t("path", {
      class: m.stroke,
      "stroke-dasharray": "0, 2, 2, 6",
      "stroke-width": "10px",
      d: `M ${e} ${o} L ${n + 4} ${c - 4}`
    })]
  });
};
var Qe = ({
  x1: e,
  y1: o,
  x2: n,
  y2: c
}) => {
  const s = Math.atan2(c - o, n - e);
  return n -= Math.cos(s) * 10, c -= Math.sin(s) * 10, t("g", {
    class: m.edge,
    children: t("path", {
      class: m.stroke,
      "stroke-width": "1.5",
      d: `M ${e} ${o} L ${n} ${c}`,
      "marker-end": 'url("#end-arrow-access")'
    })
  });
};
var je = ({
  x1: e,
  y1: o,
  x2: n,
  y2: c
}) => t("g", {
  class: m.edge,
  children: [t("path", {
    "stroke-width": "8",
    d: `M ${e} ${o} L ${n} ${c}`,
    class: m.stroke
  }), t("path", {
    "stroke-width": "5",
    class: m.fill,
    d: `M ${e} ${o} L ${n} ${c}`
  })]
});
var pe = ({
  x1: e,
  y1: o,
  x2: n,
  y2: c
}) => t("g", {
  class: m.edge,
  children: [t("path", {
    class: m.stroke,
    "stroke-width": "1.5",
    d: `M ${e} ${o} L ${n} ${c}`,
    "marker-end": 'url("#end-arrow-access")'
  }), t("path", {
    class: m.stroke,
    "stroke-dasharray": "0, 20, 2, 6",
    "stroke-width": "5px",
    d: `M ${e} ${o - 5} L ${n + 5} ${c}`
  }), t("path", {
    class: m.stroke,
    "stroke-dashoffset": "14",
    "stroke-dasharray": "0, 20, 2, 6",
    "stroke-width": "5px",
    d: `M ${e - 5} ${o} L ${n} ${c + 5}`
  })]
});
var et = {
  [A.EdgeConst]: je,
  [A.ArcConst]: Ze,
  [A.ArcConstPermPosAccess]: Qe,
  [A.ArcConstPermNegAccess]: Je,
  [A.ArcConstPermFuzAccess]: pe
};
var ne = ({
  type: e,
  noselect: o,
  x1: n = 0,
  y1: c = 0,
  x2: s = 0,
  y2: u = 0,
  mousedown: l2,
  mouseup: g3,
  highlight: v,
  padding: x2 = 0
}) => {
  const r2 = et[e], a = Math.sqrt(Math.pow(s - n, 2) + Math.pow(u - c, 2)), d = a && (s - n) / a * x2, h = a && (u - c) / a * x2;
  return t("g", {
    class: te(m.container, o && m.noselect, v && m.highlight),
    onMouseDown: l2,
    onMouseUp: g3,
    children: [t("path", {
      d: `M ${n + d} ${c + h} L ${s - d} ${u - h}`,
      "stroke-width": "15",
      stroke: "transparent"
    }), t(r2, {
      x1: n + d,
      y1: c + h,
      x2: s - d,
      y2: u - h
    })]
  });
};
var tt = () => t("defs", {
  children: [t("circle", {
    id: "scg.node.const.outer",
    cx: "0",
    cy: "0",
    r: "10"
  }), t("rect", {
    id: "scg.node.var.outer",
    x: "-10",
    y: "-10",
    width: "20",
    height: "20"
  }), t("clipPath", {
    id: "scg.node.const.clip",
    children: t("use", {
      xlinkHref: "#scg.node.const.clip"
    })
  }), t("clipPath", {
    id: "scg.node.var.clip",
    children: t("use", {
      xlinkHref: "#scg.node.var.clip"
    })
  }), t("g", {
    id: "scg.node.unknown",
    children: [t("circle", {
      cx: "0",
      cy: "0",
      r: "2.5",
      "stroke-width": "5"
    }), t("text", {
      x: "7",
      y: "15",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const.tuple",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const.struct",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("circle", {
      cx: "0",
      cy: "0",
      r: "1",
      "stroke-width": "2"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const.role",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("line", {
      x1: "0",
      x2: "0",
      y1: "-10",
      y2: "10",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const.norole",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3",
      transform: "rotate(45, 0, 0)"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3",
      transform: "rotate(-45, 0, 0)"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const.class",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "-3",
      y2: "-3",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "3",
      y2: "3",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "-3",
      x2: "-3",
      y1: "-10",
      y2: "10",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "3",
      x2: "3",
      y1: "-10",
      y2: "10",
      "stroke-width": "1.3"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const.abstract",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("g", {
      "stroke-width": "1.3",
      children: [t("line", {
        x1: "-10",
        x2: "10",
        y1: "-6",
        y2: "-6"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "-3",
        y2: "-3"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "0",
        y2: "0"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "3",
        y2: "3"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "6",
        y2: "6"
      })]
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.const.material",
    children: [t("use", {
      xlinkHref: "#scg.node.const.outer"
    }), t("g", {
      "stroke-width": "1.3",
      transform: "rotate(-45, 0, 0)",
      children: [t("line", {
        x1: "-9",
        x2: "9",
        y1: "-6",
        y2: "-6"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "-3",
        y2: "-3"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "0",
        y2: "0"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "3",
        y2: "3"
      }), t("line", {
        x1: "-9",
        x2: "9",
        y1: "6",
        y2: "6"
      })]
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var.tuple",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var.struct",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("circle", {
      cx: "0",
      cy: "0",
      r: "1",
      "stroke-width": "2"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var.role",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("line", {
      x1: "0",
      x2: "0",
      y1: "-10",
      y2: "10",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var.norole",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("line", {
      x1: "-12",
      x2: "12",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3",
      transform: "rotate(45, 0, 0)"
    }), t("line", {
      x1: "-12",
      x2: "12",
      y1: "0",
      y2: "0",
      "stroke-width": "1.3",
      transform: "rotate(-45, 0, 0)"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var.class",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "-3",
      y2: "-3",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "-10",
      x2: "10",
      y1: "3",
      y2: "3",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "-3",
      x2: "-3",
      y1: "-10",
      y2: "10",
      "stroke-width": "1.3"
    }), t("line", {
      x1: "3",
      x2: "3",
      y1: "-10",
      y2: "10",
      "stroke-width": "1.3"
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var.abstract",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("g", {
      "stroke-width": "1.3",
      children: [t("line", {
        x1: "-10",
        x2: "10",
        y1: "-6",
        y2: "-6"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "-3",
        y2: "-3"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "0",
        y2: "0"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "3",
        y2: "3"
      }), t("line", {
        x1: "-10",
        x2: "10",
        y1: "6",
        y2: "6"
      })]
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("g", {
    id: "scg.node.var.material",
    children: [t("use", {
      xlinkHref: "#scg.node.var.outer"
    }), t("g", {
      "stroke-width": "1.3",
      transform: "rotate(-45, 0, 0)",
      children: [t("line", {
        x1: "-9",
        x2: "9",
        y1: "-6",
        y2: "-6"
      }), t("line", {
        x1: "-11",
        x2: "11",
        y1: "-3",
        y2: "-3"
      }), t("line", {
        x1: "-13",
        x2: "13",
        y1: "0",
        y2: "0"
      }), t("line", {
        x1: "-11",
        x2: "11",
        y1: "3",
        y2: "3"
      }), t("line", {
        x1: "-9",
        x2: "9",
        y1: "6",
        y2: "6"
      })]
    }), t("text", {
      x: "17",
      y: "21",
      class: "SCgText"
    })]
  }), t("marker", {
    id: "end-arrow-access",
    viewBox: "0 -5 10 10",
    refX: "0",
    markerWidth: "8",
    markerHeight: "14",
    orient: "auto",
    markerUnits: "userSpaceOnUse",
    children: t("path", {
      d: "M0,-4L10,0L0,4",
      fill: "var(--scgEdgeMarkerColor, var(--scgEdgeColor, #000))"
    })
  }), t("marker", {
    id: "end-arrow-common",
    viewBox: "0 -5 10 10",
    refX: "0",
    markerWidth: "10",
    markerHeight: "16",
    orient: "auto",
    markerUnits: "userSpaceOnUse",
    children: t("path", {
      d: "M0,-4L10,0L0,4",
      fill: "var(--scgEdgeMarkerColor, var(--scgEdgeColor, #000))"
    })
  })]
});
var nt = "_9ga9";
var ot = "sy6u";
var xe = {
  graph: nt,
  innerHtml: ot
};
var st = (e, o) => {
  const n = F(null), c = e && q(() => e / 2, [e]), s = o && q(() => o / 2, [o]), u = x((g3) => t(ct, {
    width: e,
    height: o,
    centerX: c,
    centerY: s,
    ...g3,
    pref: n
  }), [e, o]), l2 = x((g3, v) => {
    if (!n.current)
      return [0, 0];
    const x2 = n.current.getBoundingClientRect();
    return [g3 - x2.x - c, v - x2.y - s];
  }, [n.current]);
  return {
    BaseGraph: u,
    getInnerPoint: l2
  };
};
var ct = (e) => {
  const o = G(e.transform), n = G(e.noselect), c = G(e.nolabels);
  return t("div", {
    class: xe.graph,
    "data-movable": G(e.movable) ? "" : void 0,
    "data-moving": (o == null ? void 0 : o.moving) ? "" : void 0,
    "data-dragging": G(e.dragging) ? "" : void 0,
    "data-selecting": G(e.selecting) ? "" : void 0,
    children: [t("svg", {
      ref: e.pref,
      xmlns: "http://www.w3.org/2000/svg",
      xmlnsXlink: "http://www.w3.org/1999/xlink",
      viewBox: `-${e.centerX} -${e.centerY} ${e.width} ${e.height}`,
      width: `${e.width}px`,
      height: `${e.height}px`,
      onContextMenu: (s) => (s.preventDefault(), s.stopPropagation()),
      onMouseDown: e.onMouseDown,
      onWheel: e.onWheel,
      onMouseEnter: e.onMouseEnter,
      onMouseLeave: e.onMouseLeave,
      children: [t(tt, {}), e.elements && t("g", {
        transform: o && `translate(${o.x} ${o.y}) scale(${o.zoom})`,
        children: [e.before, e.elements.edges.map((s, u) => {
          var _a;
          return t(ne, {
            type: s.type,
            x1: s.source.x,
            y1: s.source.y,
            x2: s.target.x,
            y2: s.target.y,
            mousedown: (l2) => {
              var _a2;
              return (_a2 = e.onEdgeMouseDown) == null ? void 0 : _a2.call(e, l2, s, u);
            },
            mouseup: (l2) => {
              var _a2;
              return (_a2 = e.onEdgeMouseUp) == null ? void 0 : _a2.call(e, l2, s, u);
            },
            highlight: (_a = G(e.highlight)) == null ? void 0 : _a.has(s.id),
            noselect: n && (n === true || n.has(s.id)),
            padding: e.padding
          }, s.id);
        }), e.elements.nodes.map((s, u) => {
          var _a;
          return t(ye, {
            type: s.type,
            x: Math.round(s.x) || 0,
            y: Math.round(s.y) || 0,
            label: c && (c === true || c.has(s.id)) ? void 0 : s.label,
            mousedown: (l2) => {
              var _a2;
              return (_a2 = e.onNodeMouseDown) == null ? void 0 : _a2.call(e, l2, s, u);
            },
            mouseup: (l2) => {
              var _a2;
              return (_a2 = e.onNodeMouseUp) == null ? void 0 : _a2.call(e, l2, s, u);
            },
            highlight: (_a = G(e.highlight)) == null ? void 0 : _a.has(s.id),
            noselect: n && (n === true || n.has(s.id)),
            padding: e.padding && e.padding + 1,
            textDoubleClick: () => {
              var _a2;
              return (_a2 = e.onTextDoubleClick) == null ? void 0 : _a2.call(e, s);
            }
          }, s.id);
        }), e.inner]
      }), e.children]
    }), t("div", {
      class: xe.innerHtml,
      style: {
        transform: o && `translate(${o.x}px, ${o.y}px) scale(${o.zoom}) translate(50%, 50%)`
      },
      onWheel: e.onWheel,
      children: e.innerHtml
    })]
  });
};
var at = (e) => {
  const o = M({
    values: []
  }), n = (v, x2, r2) => {
    const a = {
      id: 0,
      type: r2,
      x: v,
      y: x2
    };
    if (e.addNode(a), o.values.length) {
      for (const {
        type: d,
        source: h
      } of o.values)
        e.addEdge({
          id: 0,
          type: d,
          source: h,
          target: a
        });
      o.values = [];
    }
  }, c = (v, x2, r2) => {
    if (!e.selection)
      return;
    const a = [];
    for (const d of e.nodes)
      e.selection.value.has(d.id) && a.push({
        type: r2,
        source: d,
        target: {
          x: v,
          y: x2
        }
      });
    o.values = a;
  }, s = (v) => {
    if (!e.selection || !o.values.length)
      return;
    const [x2, r2] = e.localize(...e.getInnerPoint(v.clientX, v.clientY));
    for (const a of o.values)
      a.target.x = x2, a.target.y = r2;
  }, u = (v, x2) => {
    if (o.values.length) {
      for (const {
        type: r2,
        source: a
      } of o.values)
        for (const d of x2)
          v.has(d.id) && e.addEdge({
            id: 0,
            type: r2,
            source: a,
            target: d
          });
      o.values = [];
    }
  }, l2 = x(() => e.Edge ? t(rt, {
    Edge: e.Edge,
    edges: o.values
  }) : null, [o]), g3 = useComputed(() => {
    var _a;
    return !!((_a = o.$values) == null ? void 0 : _a.value.length);
  });
  return {
    createNode: n,
    startDrawingEdge: c,
    updateDrawingEdges: s,
    createEdges: u,
    DrawingEdges: l2,
    isDrawingEdges: g3
  };
};
var rt = (e) => t("g", {
  children: e.edges.map((o, n) => t(e.Edge, {
    type: o.type,
    x1: o.source.x,
    y1: o.source.y,
    x2: o.target.x,
    y2: o.target.y
  }, n))
});
var lt = "h6sx";
var it = "fu9u";
var ut = {
  disk: lt,
  show: it
};
var dt = (e) => t("g", {
  transform: `translate(${e.x} ${e.y})`,
  children: t("g", {
    class: ut.disk,
    children: e.type === "node" ? e.nodeOptions.map(({
      type: o,
      x1: n,
      y1: c,
      x2: s,
      y2: u,
      textX: l2,
      textY: g3,
      nodeX: v,
      nodeY: x2
    }, r2) => t("g", {
      onMouseDown: (a) => a.stopPropagation(),
      onMouseUp: (a) => e.click(e.type, e.x, e.y, a, o),
      children: [t("path", {
        d: `M ${n} ${c} A 70 70 0 0 1 ${s} ${u}`,
        "stroke-width": "90"
      }), t("text", {
        x: l2,
        y: g3,
        "stroke-width": "90",
        children: r2 + 1
      }), t(ye, {
        x: v,
        y: x2,
        type: o,
        noselect: true
      })]
    }, o)) : e.edgeOptions.map(({
      type: o,
      x1: n,
      y1: c,
      x2: s,
      y2: u,
      textX: l2,
      textY: g3,
      edgeX1: v,
      edgeY1: x2,
      edgeX2: r2,
      edgeY2: a
    }, d) => t("g", {
      onMouseDown: (h) => h.stopPropagation(),
      onMouseUp: (h) => e.click(e.type, e.x, e.y, h, o),
      children: [t("path", {
        d: `M ${n} ${c} A 70 70 0 0 1 ${s} ${u}`,
        "stroke-width": "90"
      }), t("text", {
        x: l2,
        y: g3,
        "stroke-width": "90",
        children: d + 1
      }), t(ne, {
        x1: v,
        y1: x2,
        x2: r2,
        y2: a,
        type: o,
        noselect: true
      })]
    }, o))
  })
});
var ht = [E2.Const, E2.ConstClass, E2.ConstStruct, E2.ConstTuple, E2.Unknown, E2.VarTuple, E2.VarStruct, E2.VarClass, E2.Var];
var gt = [A.ArcConstPermNegAccess, A.ArcConstPermPosAccess, A.ArcConst, A.EdgeConst];
var vt = (e) => e.map((o, n, c) => {
  const s = 2 * Math.PI / c.length;
  return {
    type: o,
    x1: Math.round(700 * Math.sin(s * n)) / 10,
    y1: Math.round(700 * -Math.cos(s * n)) / 10,
    x2: Math.round(700 * Math.sin(s * (n + 1))) / 10,
    y2: Math.round(700 * -Math.cos(s * (n + 1))) / 10,
    textX: Math.round(990 * Math.sin(0.12 + s * n)) / 10 - 4,
    textY: Math.round(990 * -Math.cos(0.12 + s * n)) / 10 + 6,
    nodeX: Math.round(740 * Math.sin(0.35 + s * n)) / 10,
    nodeY: Math.round(740 * -Math.cos(0.35 + s * n)) / 10
  };
});
var xt = (e) => e.map((o, n, c) => {
  const s = 2 * Math.PI / c.length;
  return {
    type: o,
    x1: Math.round(700 * Math.sin(s * n)) / 10,
    y1: Math.round(700 * -Math.cos(s * n)) / 10,
    x2: Math.round(700 * Math.sin(s * (n + 1))) / 10,
    y2: Math.round(700 * -Math.cos(s * (n + 1))) / 10,
    textX: Math.round(990 * Math.sin(0.12 + s * n)) / 10 - 4,
    textY: Math.round(990 * -Math.cos(0.12 + s * n)) / 10 + 6,
    edgeX1: Math.round(450 * Math.sin(s * (n + 0.5))) / 10,
    edgeY1: Math.round(450 * -Math.cos(s * (n + 0.5))) / 10,
    edgeX2: Math.round(900 * Math.sin(s * (n + 0.5))) / 10,
    edgeY2: Math.round(900 * -Math.cos(s * (n + 0.5))) / 10
  };
});
var ft = (e, o) => {
  const n = q(() => vt((o == null ? void 0 : o.nodeTypes) ?? ht), [o == null ? void 0 : o.nodeTypes]), c = q(() => xt((o == null ? void 0 : o.edgeTypes) ?? gt), [o == null ? void 0 : o.edgeTypes]), s = M({
    x: 0,
    y: 0,
    type: "node",
    shown: false
  }), u = x((a) => {
    if (o == null ? void 0 : o.getInnerPoint) {
      const [d, h] = o.getInnerPoint(a.clientX, a.clientY);
      if (Math.sqrt((s.x - d) ** 2 + (s.y - h) ** 2) <= 5)
        return;
    }
    s.shown = false, g3();
  }, []), l2 = x((a) => {
    a.code === "Escape" && (s.shown = false, g3());
  }, []), g3 = () => {
    document.removeEventListener("keydown", l2), document.removeEventListener("mouseup", u);
  };
  return _(() => g3, []), {
    Disk: () => s.shown ? t(dt, {
      x: s.x,
      y: s.y,
      type: s.type,
      click: e,
      nodeOptions: n,
      edgeOptions: c
    }) : null,
    showDisk: (a, d, h) => {
      s.type = a, s.x = d, s.y = h, s.shown = true, document.addEventListener("mouseup", u, {
        once: true
      }), document.addEventListener("keydown", l2, {
        once: true
      });
    },
    hideDisk: () => {
      s.shown = false;
    },
    isDiskOpened: s.$shown
  };
};
var yt = (e) => {
  const o = useSignal(false), n = useSignal({
    x: 0,
    y: 0
  }), c = useSignal({
    x: 0,
    y: 0
  }), s = (v) => {
    o.value = true;
    const [x2, r2] = e.getInnerPoint(v.clientX, v.clientY);
    n.value.x = x2, n.value.y = r2, c.value.x = 0, c.value.y = 0, document.addEventListener("mouseup", g3, {
      once: true
    });
  }, u = (v) => {
    var _a, _b;
    const [x2, r2] = e.getInnerPoint(v.clientX, v.clientY), a = n.value.x - x2, d = n.value.y - r2, h = ((_a = e.zoom) == null ? void 0 : _a.value) ?? 1;
    for (const f of e.nodes)
      e.selection.value.has(f.id) && ((_b = e.changeNodePosition) == null ? void 0 : _b.call(e, f, f.x - a / h, f.y - d / h));
    c.value.x += a, c.value.y += d, n.value.x = x2, n.value.y = r2;
  }, l2 = (v) => {
    var _a, _b;
    if (o.value) {
      if (v == null ? void 0 : v.revert) {
        const x2 = ((_a = e.zoom) == null ? void 0 : _a.value) ?? 1;
        for (const r2 of e.nodes)
          e.selection.value.has(r2.id) && ((_b = e.changeNodePosition) == null ? void 0 : _b.call(e, r2, r2.x + c.value.x / x2, r2.y + c.value.y / x2));
      }
      g3();
    }
  }, g3 = x(() => {
    if (document.removeEventListener("mouseup", g3), e.nodePositionChanged)
      for (const v of e.nodes)
        e.selection.value.has(v.id) && e.nodePositionChanged(v);
    o.value = false;
  }, [o, e.nodes, e.selection, e.nodePositionChanged]);
  return _(() => () => document.removeEventListener("mouseup", g3), [o, e.nodes, e.selection, e.nodePositionChanged]), {
    isDragging: w(() => o.value),
    startDragginig: s,
    updateDragging: u,
    abortDragging: l2
  };
};
var me = (e, o) => {
  let n = 1 / 0, c = -1 / 0, s = 1 / 0, u = -1 / 0;
  for (const l2 of e)
    o.has(l2.id) && (l2.x > u && (u = l2.x), l2.x < s && (s = l2.x), l2.y < n && (n = l2.y), l2.y > c && (c = l2.y));
  return {
    top: n,
    bottom: c,
    right: u,
    left: s
  };
};
var mt = "_9uvf";
var wt = "kcyn";
var kt = "_2acs";
var Mt = "fyh8";
var $t = "r5g4";
var Ct = "yp31";
var K = {
  placeholder: mt,
  group: wt,
  opened: kt,
  selected: Mt,
  circle: $t,
  indicator: Ct
};
var Pt = (e) => q(() => t("g", {
  onMouseDown: (n) => {
    var _a;
    return (_a = e.onMouseDown) == null ? void 0 : _a.call(e, n, e.id);
  },
  children: [t("rect", {
    class: te(K.group, e.opened && K.opened, e.selected && K.selected),
    x: e.left - 30,
    y: e.top - 30,
    width: e.right - e.left + 30 * 2,
    height: e.bottom - e.top + 30 * 2
  }), e.indicator && t(g, {
    children: [t("circle", {
      class: K.circle,
      cx: e.left - 25,
      cy: e.top - 25,
      r: 15
    }), t("text", {
      class: K.indicator,
      x: e.left - 29.8,
      y: e.top - 19.2,
      children: e.indicator
    })]
  })]
}), Object.values(e));
var Dt = (e) => {
  const o = useSignal(/* @__PURE__ */ new Set()), n = useSignal(null);
  _(() => E(() => {
    for (const r2 of e.groups) {
      const a = me(e.nodes, r2.values);
      for (const [d, h] of Object.entries(a))
        r2.position[d] !== h && (r2.position[d] = h);
    }
  }), [e.nodes, e.groups]);
  const c = (r2) => {
    o.value.add(r2), o.value = new Set(o.value), r2 === n.value && (n.value = null);
  }, s = (r2) => {
    o.value.delete(r2), o.value = new Set(o.value);
  }, u = () => {
    o.value = /* @__PURE__ */ new Set();
  }, l2 = (r2) => n.value = r2, g3 = () => n.value = null, v = useComputed(() => {
    var _a;
    return n.value && ((_a = e.groups.find(({
      id: r2
    }) => r2 === n.value)) == null ? void 0 : _a.values);
  });
  return {
    Group: x((r2) => t("g", {
      class: r2.placeholder && K.placeholder,
      children: e.groups.map((a) => {
        var _a, _b;
        return t(Pt, {
          id: a.id,
          ...a.position,
          onMouseDown: r2.onMouseDown,
          opened: !r2.nohighlight && ((_a = o.value) == null ? void 0 : _a.has(a.id)),
          selected: r2.customSelection ? r2.customSelection.has(a.id) : !r2.nohighlight && n.value === a.id,
          indicator: (_b = r2.customIndicators) == null ? void 0 : _b.get(a.id)
        }, a.id);
      })
    }), [e.groups]),
    openGroup: c,
    closeGroup: s,
    closeAllGroups: u,
    selectGroup: l2,
    deselectGroup: g3,
    selectedGroup: v,
    selectedGroupId: n
  };
};
var Et = "am5j";
var St = "rudp";
var At = "w16c";
var p = {
  menu: Et,
  hidden: St,
  button: At
};
var zt = (e) => e.buttons.length ? t("div", {
  class: `${p.menu} ${e.shown ? "" : p.hidden}`,
  style: {
    transform: `translate(${e.x}px, ${e.y}px) translate(-50%, 18px)`
  },
  onMouseLeave: e.leave,
  children: e.buttons.map((o, n) => t("div", {
    class: p.button,
    onClick: (c) => o.action(c, e.x, e.y),
    children: o.content
  }, n))
}) : null;
var Lt = (e) => {
  const o = useSignal(false), n = F(0), c = useComputed(() => {
    if (!e.selection.value.size || !e.visible.value)
      return null;
    const l2 = {
      x: -1 / 0,
      y: -1 / 0
    };
    for (const g3 of e.nodes)
      e.selection.value.has(g3.id) && (g3.y < l2.y || (l2.x = g3.x, l2.y = g3.y));
    return l2;
  });
  _(() => {
    var _a;
    ((_a = e.selection.value) == null ? void 0 : _a.size) && e.visible.value && (o.value = false, self.clearTimeout(n.current), n.current = self.setTimeout(() => {
      o.value = true, document.addEventListener("mousedown", s, {
        once: true,
        capture: true
      });
    }, 600));
  }, [c.value]);
  const s = x(() => {
    o.value = false;
  }, []);
  return _(() => document.removeEventListener("mousedown", s, {
    capture: true
  }), []), {
    Menu: () => c.value ? t(zt, {
      ...c.value,
      buttons: e.buttons.value,
      leave: s,
      shown: o.value,
      padding: e.padding ?? 0
    }) : null,
    hideMenu: s,
    menuNodePosition: c
  };
};
var bt = (e) => {
  const o = e.width / 2, n = e.height / 2, c = M({
    x: 0,
    y: 0,
    zoom: 1,
    moving: false
  }), s = (a, d) => [(a - c.x) / c.zoom, (d - c.y) / c.zoom], u = (a, d) => [a * c.zoom + c.x, d * c.zoom + c.y], l2 = useSignal(null), g3 = (a) => {
    const [d, h] = e.getInnerPoint(a.clientX, a.clientY);
    l2.value = {
      x: d,
      y: h
    };
  }, v = (a) => {
    const [d, h] = e.getInnerPoint(a.clientX, a.clientY);
    l2.value = {
      x: d,
      y: h
    };
  }, x2 = () => {
    l2.value = null;
  };
  return {
    transform: c,
    centerX: o,
    centerY: n,
    localize: s,
    globalize: u,
    onwheel: (a) => {
      if (a.preventDefault(), a.ctrlKey) {
        let d = a.deltaY * 0.01;
        c.zoom - d < 0.1 ? d = c.zoom - 0.1 : c.zoom - d > 5 && (d = c.zoom - 5), c.x += d / c.zoom * (a.offsetX - o - c.x), c.y += d / c.zoom * (a.offsetY - n - c.y), c.zoom -= d;
      } else
        c.x -= a.deltaX, c.y -= a.deltaY;
    },
    zoom: c.$zoom,
    startMoving: g3,
    updateMoving: v,
    stopMoving: x2
  };
};
var _t = "xm7w";
var Xt = "x6ar";
var fe = {
  component: _t,
  input: Xt
};
var Gt = (e) => {
  const o = useSignal(null), n = (u) => {
    o.value = {
      node: u
    };
  }, c = () => {
    o.value = null;
  };
  return {
    RenamingArea: x(() => o.value && t(Ht, {
      x: Math.round(o.value.node.x) || 0,
      y: Math.round(o.value.node.y) || 0,
      value: o.value.node.label ?? "",
      submit: (u) => {
        var _a;
        return o.value && ((_a = e.submit) == null ? void 0 : _a.call(e, o.value.node, u), c());
      }
    }), [o]),
    startRenaming: n,
    stopRenaming: c,
    isRenaming: o
  };
};
var Ht = (e) => {
  const o = F(null);
  _(() => {
    var _a;
    return (_a = o.current) == null ? void 0 : _a.focus();
  }, []);
  const n = (c) => {
    c.key === "Enter" && e.submit(c.currentTarget.value);
  };
  return t("div", {
    class: fe.component,
    style: {
      transform: `translate(${e.x + 19 - 5.8 - 3.5}px, ${e.y - 11 - 5.8}px)`
    },
    children: t("input", {
      ref: o,
      class: fe.input,
      type: "text",
      value: e.value,
      onKeyDown: n,
      onBlur: (c) => e.submit(c.currentTarget.value)
    })
  });
};
var Yt = (e) => t("rect", {
  x: Math.min(e.x1, e.x2),
  y: Math.min(e.y1, e.y2),
  width: Math.abs(e.x1 - e.x2),
  height: Math.abs(e.y1 - e.y2),
  rx: "1",
  ry: "1",
  "stroke-width": "1",
  fill: "#0048b61a",
  stroke: "#2669cf",
  "pointer-events": "none"
});
var Kt = (e) => {
  const o = e.localize ?? ((r2, a) => [r2, a]), n = useSignal(null), c = useSignal(/* @__PURE__ */ new Set()), s = useSignal(/* @__PURE__ */ new Set()), u = useSignal(null), l2 = x(() => {
    s.value.size && (s.value = /* @__PURE__ */ new Set());
  }, [s]), g3 = (r2, a) => {
    const [d, h] = e.getInnerPoint(r2.clientX, r2.clientY), [f, Y] = o(d, h) ?? [d, h], C = e.padding ?? 15, D = e.nodes.findLast(({
      x: z,
      y: L
    }) => Math.sqrt((z - f) ** 2 + (L - Y) ** 2) <= C), H = (a == null ? void 0 : a.clear) ? /* @__PURE__ */ new Set() : new Set(s.value);
    if (D) {
      const z = (L) => {
        !(a == null ? void 0 : a.deselection) && !(e.inversion && !(a == null ? void 0 : a.selection) && L.has(D.id)) ? L.add(D.id) : L.delete(D.id);
      };
      (a == null ? void 0 : a.clear) ? u.value = D.id : z(H);
    }
    const _2 = u.value && s.value.has(u.value);
    r(() => {
      n.value = g2({
        x1: d,
        y1: h,
        x2: d,
        y2: h
      }), c.value = _2 ? new Set(s.value) : H, (a == null ? void 0 : a.clear) && !_2 && (s.value = /* @__PURE__ */ new Set());
    }), document.addEventListener("mouseup", x2, {
      once: true
    });
  }, v = (r2, a) => {
    if (!n.value)
      return;
    if (u.value) {
      s.value.add(u.value), u.value = null, n.value = null;
      return;
    }
    const [d, h] = e.getInnerPoint(r2.clientX, r2.clientY);
    n.value.x2 = d, n.value.y2 = h;
    const f = e.padding ?? 16, [Y, C] = o(n.value.x1, n.value.y1), [D, H] = o(n.value.x2, n.value.y2), _2 = Math.min(Y, D) - f, z = Math.max(Y, D) + f, L = Math.min(C, H) - f, J = Math.max(C, H) + f, k = /* @__PURE__ */ new Set();
    for (const R of e.nodes.keys()) {
      const P = e.nodes.at(-R - 1);
      P.x >= _2 && P.x <= z && P.y >= L && P.y <= J ? !(a == null ? void 0 : a.deselection) && !(e.inversion && !(a == null ? void 0 : a.selection) && s.value.has(P.id)) && k.add(P.id) : s.value.has(P.id) && k.add(P.id);
    }
    c.value = k;
  }, x2 = x(() => {
    var _a;
    if (document.removeEventListener("mouseup", x2), !n.value)
      return;
    n.value = null;
    let r2;
    u.value ? (r2 = /* @__PURE__ */ new Set(), r2.add(u.value), u.value = null) : r2 = new Set(c.value), (_a = e.onSelectionStop) == null ? void 0 : _a.call(e, r2), s.value = r2, c.value = /* @__PURE__ */ new Set();
  }, [e.onSelectionStop]);
  return _(() => () => document.removeEventListener("mouseup", x2), [x2]), {
    /** Area selection rectangle */
    AreaSelection: x(() => n.value && t(Yt, {
      ...n.value
    }), [n]),
    selection: useComputed(() => n.value ? c.value : s.value),
    isSelecting: useComputed(() => !!n.value && (n.value.x1 !== n.value.x2 || n.value.y1 !== n.value.y2)),
    clearSelection: l2,
    startSelection: g3,
    updateSelection: v
  };
};
var It = ({
  elements: e,
  width: o,
  height: n,
  padding: c,
  addNode: s,
  addEdge: u,
  addGroup: l2,
  changeNodeLabel: g3,
  changeNodePosition: v,
  nodePositionChanged: x2,
  removeNode: r2,
  edgeTypes: a,
  nodeTypes: d,
  objectSelection: h,
  buttonIcons: f
}) => {
  const {
    BaseGraph: Y,
    getInnerPoint: C
  } = st(o, n), {
    transform: D,
    onwheel: H,
    localize: _2,
    globalize: z,
    zoom: L
  } = bt({
    width: o,
    height: n,
    getInnerPoint: C
  }), {
    AreaSelection: J,
    selection: k,
    startSelection: R,
    updateSelection: P,
    clearSelection: we,
    isSelecting: oe
  } = Kt({
    nodes: e.nodes,
    getInnerPoint: C,
    localize: _2,
    inversion: true,
    padding: c,
    onSelectionStop: x((i) => Ae(i, e.nodes), [e.nodes])
  }), {
    Group: se,
    openGroup: ke,
    closeAllGroups: ce,
    selectGroup: Me,
    deselectGroup: $e,
    selectedGroup: Ce,
    selectedGroupId: Pe
  } = Dt({
    nodes: e.nodes,
    groups: e.groups,
    selection: k
  }), {
    RenamingArea: De,
    startRenaming: ae,
    isRenaming: Q
  } = Gt({
    submit: g3
  }), re = useComputed(() => Q.value ? /* @__PURE__ */ new Set([Q.value.node.id]) : void 0), le = useComputed(() => (h == null ? void 0 : h.values) || re.value || Ce.value || k.value), {
    startDragginig: ie,
    updateDragging: ue,
    isDragging: U
  } = yt({
    nodes: e.nodes,
    selection: le,
    getInnerPoint: C,
    zoom: L,
    changeNodePosition: v,
    nodePositionChanged: x2
  }), {
    createNode: Ee,
    startDrawingEdge: Se,
    updateDrawingEdges: de,
    createEdges: Ae,
    DrawingEdges: he,
    isDrawingEdges: I
  } = at({
    addNode: s,
    addEdge: u,
    getInnerPoint: C,
    localize: _2,
    nodes: e.nodes,
    Edge: x((i) => t(ne, {
      ...i,
      noselect: true
    }), []),
    selection: k
  }), {
    Disk: ze,
    showDisk: W,
    hideDisk: F2,
    isDiskOpened: T
  } = ft((i, y, M2, X, j) => {
    if (F2(), V.current && V.current.x === y && V.current.y === M2) {
      const be = i === "node" ? e.nodes : e.edges;
      for (const ge of be)
        k.value.has(ge.id) && (ge.type = j);
    } else
      i === "node" ? Ee(..._2(y, M2), j) : Se(y, M2, j);
  }, {
    nodeTypes: d,
    edgeTypes: a,
    getInnerPoint: C
  }), V = F(null), {
    Menu: Le
  } = Lt({
    nodes: e.nodes,
    selection: k,
    visible: useComputed(() => !oe.value && !U.value && !T.value && !I.value && !Q.value),
    buttons: useComputed(() => {
      const i = [{
        content: f ? f.type : t("span", {
          children: "T"
        }),
        action: (y, M2, X) => {
          W("node", ...z(M2, X)), V.current = {
            x: M2,
            y: X
          }, document.addEventListener("mouseup", () => V.current = null, {
            once: true
          });
        }
      }, {
        content: f ? f.arrow : t("span", {
          children: "A"
        }),
        action: (y, M2, X) => W("edge", ...z(M2, X))
      }, {
        content: f ? f.group : t("span", {
          children: "G"
        }),
        action: () => l2({
          id: 0,
          label: "",
          values: k.value,
          position: me(e.nodes, k.value)
        })
      }];
      if (g3 && k.value.size === 1) {
        const y = e.nodes.find((M2) => k.value.has(M2.id));
        y && i.push({
          content: f ? f.rename : t("span", {
            children: "I"
          }),
          action: () => ae(y)
        });
      }
      return r2 && i.push({
        content: f ? f.delete : t("span", {
          children: "D"
        }),
        action: () => {
          for (const y of k.value)
            r2(y);
        }
      }), i.filter((y) => y.content);
    })
  }), N2 = x((i) => {
    I.value && !T.value && de(i), U.value && ue(i), P(i, {
      deselection: i.altKey,
      selection: i.ctrlKey || i.metaKey
    });
  }, [P, ue, U, I]);
  return _(() => (document.addEventListener("mousemove", N2, true), () => document.removeEventListener("mousemove", N2, true)), [N2]), _(() => () => document.removeEventListener("mousemove", N2, true), []), t(Y, {
    width: o,
    height: n,
    centerX: o / 2,
    centerY: n / 2,
    elements: e,
    padding: c,
    transform: D,
    highlight: h ? void 0 : le,
    noselect: !!h || oe,
    dragging: useComputed(() => U.value || I.value),
    onTextDoubleClick: (i) => ae(i),
    nolabels: re,
    onWheel: (i) => {
      H(i), I.value && de(i);
    },
    onMouseDown: (i) => {
      if (!h) {
        if (T && F2(), $e(), i.target === i.currentTarget && ce(), i.buttons === 1) {
          R(i, {
            deselection: i.altKey,
            selection: i.ctrlKey || i.metaKey,
            clear: !i.shiftKey && !i.altKey && !i.ctrlKey && !i.metaKey
          });
          return;
        }
        if (i.buttons === 2) {
          if (i.shiftKey)
            return;
          W("node", ...C(i.clientX, i.clientY));
          return;
        }
      }
    },
    onNodeMouseDown: (i, y) => {
      if (!h) {
        if (T && F2(), i.buttons === 1) {
          if (i.shiftKey)
            return;
          if (i.ctrlKey || i.metaKey || i.altKey) {
            i.stopPropagation();
            return;
          }
          ie(i);
          return;
        }
        if (i.buttons === 2) {
          if (i.shiftKey)
            return;
          i.stopPropagation(), R(i, {
            clear: true
          }), W("edge", ...z(y.x, y.y));
        }
      }
    },
    before: t(g, {
      children: t(se, {
        nohighlight: !!h,
        customSelection: h && new Set(h.values),
        onMouseDown: x((i, y) => {
        }, [])
      })
    }),
    inner: t(g, {
      children: [t(se, {
        placeholder: true,
        nohighlight: !!h,
        customSelection: h == null ? void 0 : h.values,
        customIndicators: h == null ? void 0 : h.indicators,
        onMouseDown: x((i, y) => {
          if (h && h.type === "group") {
            h.action(y);
            return;
          }
          if (T && F2(), i.stopPropagation(), ie(i), Pe.value === y) {
            const M2 = () => {
              ce(), ke(y), document.removeEventListener("mousemove", X);
            }, X = () => {
              document.removeEventListener("mouseup", M2);
            };
            document.addEventListener("mouseup", M2, {
              once: true
            }), document.addEventListener("mousemove", X, {
              once: true
            });
          } else
            Me(y), we();
        }, [h])
      }), he && t(he, {})]
    }),
    innerHtml: t(g, {
      children: [t(Le, {}), t(De, {})]
    }),
    children: [t(ze, {}), t(J, {})]
  });
};
var Rt = (e, o) => N(t(It, {
  ...o
}), document.getElementById(e));
export {
  A as EdgeType,
  It as Graph,
  E2 as NodeType,
  Rt as default
};
//# sourceMappingURL=@ennealand_enigraph.js.map
